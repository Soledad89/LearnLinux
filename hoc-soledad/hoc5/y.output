Terminals which are not used

   UNDEF


State 15 conflicts: 1 shift/reduce
State 19 conflicts: 1 shift/reduce
State 22 conflicts: 1 shift/reduce
State 53 conflicts: 1 shift/reduce
State 74 conflicts: 1 shift/reduce


Grammar

    0 $accept: list $end

    1 list: /* empty */
    2     | list '\n'
    3     | list asgn '\n'
    4     | list stmt '\n'
    5     | list expr '\n'
    6     | list error '\n'

    7 asgn: VAR '=' expr

    8 stmt: expr
    9     | PRINT expr
   10     | while cond stmt end
   11     | if cond stmt end
   12     | if cond stmt end ELSE stmt end
   13     | '{' stmtlist '}'

   14 cond: '(' expr ')'

   15 while: WHILE

   16 if: IF

   17 end: /* empty */

   18 stmtlist: /* empty */
   19         | stmtlist '\n'
   20         | stmtlist stmt

   21 expr: NUMBER
   22     | VAR
   23     | asgn
   24     | BLTIN '(' expr ')'
   25     | '(' expr ')'
   26     | expr '+' expr
   27     | expr '-' expr
   28     | expr '*' expr
   29     | expr '/' expr
   30     | expr '^' expr
   31     | '-' expr
   32     | expr GT expr
   33     | expr GE expr
   34     | expr LT expr
   35     | expr LE expr
   36     | expr EQ expr
   37     | expr NE expr
   38     | expr AND expr
   39     | expr OR expr
   40     | NOT expr


Terminals, with rules where they appear

$end (0) 0
'\n' (10) 2 3 4 5 6 19
'(' (40) 14 24 25
')' (41) 14 24 25
'*' (42) 28
'+' (43) 26
'-' (45) 27 31
'/' (47) 29
'=' (61) 7
'^' (94) 30
'{' (123) 13
'}' (125) 13
error (256) 6
NUMBER (258) 21
PRINT (259) 9
VAR (260) 7 22
BLTIN (261) 24
UNDEF (262)
WHILE (263) 15
IF (264) 16
ELSE (265) 12
OR (266) 39
AND (267) 38
NE (268) 37
EQ (269) 36
LE (270) 35
LT (271) 34
GE (272) 33
GT (273) 32
NOT (274) 40
UNARYMINUS (275)


Nonterminals, with rules where they appear

$accept (32)
    on left: 0
list (33)
    on left: 1 2 3 4 5 6, on right: 0 2 3 4 5 6
asgn (34)
    on left: 7, on right: 3 23
stmt (35)
    on left: 8 9 10 11 12 13, on right: 4 10 11 12 20
cond (36)
    on left: 14, on right: 10 11 12
while (37)
    on left: 15, on right: 10
if (38)
    on left: 16, on right: 11 12
end (39)
    on left: 17, on right: 10 11 12
stmtlist (40)
    on left: 18 19 20, on right: 13 19 20
expr (41)
    on left: 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38
    39 40, on right: 5 7 8 9 14 24 25 26 27 28 29 30 31 32 33 34 35
    36 37 38 39 40


state 0

    0 $accept: . list $end

    $default  reduce using rule 1 (list)

    list  go to state 1


state 1

    0 $accept: list . $end
    2 list: list . '\n'
    3     | list . asgn '\n'
    4     | list . stmt '\n'
    5     | list . expr '\n'
    6     | list . error '\n'

    $end    shift, and go to state 2
    error   shift, and go to state 3
    NUMBER  shift, and go to state 4
    PRINT   shift, and go to state 5
    VAR     shift, and go to state 6
    BLTIN   shift, and go to state 7
    WHILE   shift, and go to state 8
    IF      shift, and go to state 9
    '-'     shift, and go to state 10
    NOT     shift, and go to state 11
    '\n'    shift, and go to state 12
    '{'     shift, and go to state 13
    '('     shift, and go to state 14

    asgn   go to state 15
    stmt   go to state 16
    while  go to state 17
    if     go to state 18
    expr   go to state 19


state 2

    0 $accept: list $end .

    $default  accept


state 3

    6 list: list error . '\n'

    '\n'  shift, and go to state 20


state 4

   21 expr: NUMBER .

    $default  reduce using rule 21 (expr)


state 5

    9 stmt: PRINT . expr

    NUMBER  shift, and go to state 4
    VAR     shift, and go to state 6
    BLTIN   shift, and go to state 7
    '-'     shift, and go to state 10
    NOT     shift, and go to state 11
    '('     shift, and go to state 14

    asgn  go to state 21
    expr  go to state 22


state 6

    7 asgn: VAR . '=' expr
   22 expr: VAR .

    '='  shift, and go to state 23

    $default  reduce using rule 22 (expr)


state 7

   24 expr: BLTIN . '(' expr ')'

    '('  shift, and go to state 24


state 8

   15 while: WHILE .

    $default  reduce using rule 15 (while)


state 9

   16 if: IF .

    $default  reduce using rule 16 (if)


state 10

   31 expr: '-' . expr

    NUMBER  shift, and go to state 4
    VAR     shift, and go to state 6
    BLTIN   shift, and go to state 7
    '-'     shift, and go to state 10
    NOT     shift, and go to state 11
    '('     shift, and go to state 14

    asgn  go to state 21
    expr  go to state 25


state 11

   40 expr: NOT . expr

    NUMBER  shift, and go to state 4
    VAR     shift, and go to state 6
    BLTIN   shift, and go to state 7
    '-'     shift, and go to state 10
    NOT     shift, and go to state 11
    '('     shift, and go to state 14

    asgn  go to state 21
    expr  go to state 26


state 12

    2 list: list '\n' .

    $default  reduce using rule 2 (list)


state 13

   13 stmt: '{' . stmtlist '}'

    $default  reduce using rule 18 (stmtlist)

    stmtlist  go to state 27


state 14

   25 expr: '(' . expr ')'

    NUMBER  shift, and go to state 4
    VAR     shift, and go to state 6
    BLTIN   shift, and go to state 7
    '-'     shift, and go to state 10
    NOT     shift, and go to state 11
    '('     shift, and go to state 14

    asgn  go to state 21
    expr  go to state 28


state 15

    3 list: list asgn . '\n'
   23 expr: asgn .

    '\n'  shift, and go to state 29

    '\n'      [reduce using rule 23 (expr)]
    $default  reduce using rule 23 (expr)


state 16

    4 list: list stmt . '\n'

    '\n'  shift, and go to state 30


state 17

   10 stmt: while . cond stmt end

    '('  shift, and go to state 31

    cond  go to state 32


state 18

   11 stmt: if . cond stmt end
   12     | if . cond stmt end ELSE stmt end

    '('  shift, and go to state 31

    cond  go to state 33


state 19

    5 list: list expr . '\n'
    8 stmt: expr .
   26 expr: expr . '+' expr
   27     | expr . '-' expr
   28     | expr . '*' expr
   29     | expr . '/' expr
   30     | expr . '^' expr
   32     | expr . GT expr
   33     | expr . GE expr
   34     | expr . LT expr
   35     | expr . LE expr
   36     | expr . EQ expr
   37     | expr . NE expr
   38     | expr . AND expr
   39     | expr . OR expr

    OR    shift, and go to state 34
    AND   shift, and go to state 35
    NE    shift, and go to state 36
    EQ    shift, and go to state 37
    LE    shift, and go to state 38
    LT    shift, and go to state 39
    GE    shift, and go to state 40
    GT    shift, and go to state 41
    '+'   shift, and go to state 42
    '-'   shift, and go to state 43
    '*'   shift, and go to state 44
    '/'   shift, and go to state 45
    '^'   shift, and go to state 46
    '\n'  shift, and go to state 47

    '\n'  [reduce using rule 8 (stmt)]


state 20

    6 list: list error '\n' .

    $default  reduce using rule 6 (list)


state 21

   23 expr: asgn .

    $default  reduce using rule 23 (expr)


state 22

    9 stmt: PRINT expr .
   26 expr: expr . '+' expr
   27     | expr . '-' expr
   28     | expr . '*' expr
   29     | expr . '/' expr
   30     | expr . '^' expr
   32     | expr . GT expr
   33     | expr . GE expr
   34     | expr . LT expr
   35     | expr . LE expr
   36     | expr . EQ expr
   37     | expr . NE expr
   38     | expr . AND expr
   39     | expr . OR expr

    OR   shift, and go to state 34
    AND  shift, and go to state 35
    NE   shift, and go to state 36
    EQ   shift, and go to state 37
    LE   shift, and go to state 38
    LT   shift, and go to state 39
    GE   shift, and go to state 40
    GT   shift, and go to state 41
    '+'  shift, and go to state 42
    '-'  shift, and go to state 43
    '*'  shift, and go to state 44
    '/'  shift, and go to state 45
    '^'  shift, and go to state 46

    '-'       [reduce using rule 9 (stmt)]
    $default  reduce using rule 9 (stmt)


state 23

    7 asgn: VAR '=' . expr

    NUMBER  shift, and go to state 4
    VAR     shift, and go to state 6
    BLTIN   shift, and go to state 7
    '-'     shift, and go to state 10
    NOT     shift, and go to state 11
    '('     shift, and go to state 14

    asgn  go to state 21
    expr  go to state 48


state 24

   24 expr: BLTIN '(' . expr ')'

    NUMBER  shift, and go to state 4
    VAR     shift, and go to state 6
    BLTIN   shift, and go to state 7
    '-'     shift, and go to state 10
    NOT     shift, and go to state 11
    '('     shift, and go to state 14

    asgn  go to state 21
    expr  go to state 49


state 25

   26 expr: expr . '+' expr
   27     | expr . '-' expr
   28     | expr . '*' expr
   29     | expr . '/' expr
   30     | expr . '^' expr
   31     | '-' expr .
   32     | expr . GT expr
   33     | expr . GE expr
   34     | expr . LT expr
   35     | expr . LE expr
   36     | expr . EQ expr
   37     | expr . NE expr
   38     | expr . AND expr
   39     | expr . OR expr

    '^'  shift, and go to state 46

    $default  reduce using rule 31 (expr)


state 26

   26 expr: expr . '+' expr
   27     | expr . '-' expr
   28     | expr . '*' expr
   29     | expr . '/' expr
   30     | expr . '^' expr
   32     | expr . GT expr
   33     | expr . GE expr
   34     | expr . LT expr
   35     | expr . LE expr
   36     | expr . EQ expr
   37     | expr . NE expr
   38     | expr . AND expr
   39     | expr . OR expr
   40     | NOT expr .

    '^'  shift, and go to state 46

    $default  reduce using rule 40 (expr)


state 27

   13 stmt: '{' stmtlist . '}'
   19 stmtlist: stmtlist . '\n'
   20         | stmtlist . stmt

    NUMBER  shift, and go to state 4
    PRINT   shift, and go to state 5
    VAR     shift, and go to state 6
    BLTIN   shift, and go to state 7
    WHILE   shift, and go to state 8
    IF      shift, and go to state 9
    '-'     shift, and go to state 10
    NOT     shift, and go to state 11
    '\n'    shift, and go to state 50
    '{'     shift, and go to state 13
    '}'     shift, and go to state 51
    '('     shift, and go to state 14

    asgn   go to state 21
    stmt   go to state 52
    while  go to state 17
    if     go to state 18
    expr   go to state 53


state 28

   25 expr: '(' expr . ')'
   26     | expr . '+' expr
   27     | expr . '-' expr
   28     | expr . '*' expr
   29     | expr . '/' expr
   30     | expr . '^' expr
   32     | expr . GT expr
   33     | expr . GE expr
   34     | expr . LT expr
   35     | expr . LE expr
   36     | expr . EQ expr
   37     | expr . NE expr
   38     | expr . AND expr
   39     | expr . OR expr

    OR   shift, and go to state 34
    AND  shift, and go to state 35
    NE   shift, and go to state 36
    EQ   shift, and go to state 37
    LE   shift, and go to state 38
    LT   shift, and go to state 39
    GE   shift, and go to state 40
    GT   shift, and go to state 41
    '+'  shift, and go to state 42
    '-'  shift, and go to state 43
    '*'  shift, and go to state 44
    '/'  shift, and go to state 45
    '^'  shift, and go to state 46
    ')'  shift, and go to state 54


state 29

    3 list: list asgn '\n' .

    $default  reduce using rule 3 (list)


state 30

    4 list: list stmt '\n' .

    $default  reduce using rule 4 (list)


state 31

   14 cond: '(' . expr ')'

    NUMBER  shift, and go to state 4
    VAR     shift, and go to state 6
    BLTIN   shift, and go to state 7
    '-'     shift, and go to state 10
    NOT     shift, and go to state 11
    '('     shift, and go to state 14

    asgn  go to state 21
    expr  go to state 55


state 32

   10 stmt: while cond . stmt end

    NUMBER  shift, and go to state 4
    PRINT   shift, and go to state 5
    VAR     shift, and go to state 6
    BLTIN   shift, and go to state 7
    WHILE   shift, and go to state 8
    IF      shift, and go to state 9
    '-'     shift, and go to state 10
    NOT     shift, and go to state 11
    '{'     shift, and go to state 13
    '('     shift, and go to state 14

    asgn   go to state 21
    stmt   go to state 56
    while  go to state 17
    if     go to state 18
    expr   go to state 53


state 33

   11 stmt: if cond . stmt end
   12     | if cond . stmt end ELSE stmt end

    NUMBER  shift, and go to state 4
    PRINT   shift, and go to state 5
    VAR     shift, and go to state 6
    BLTIN   shift, and go to state 7
    WHILE   shift, and go to state 8
    IF      shift, and go to state 9
    '-'     shift, and go to state 10
    NOT     shift, and go to state 11
    '{'     shift, and go to state 13
    '('     shift, and go to state 14

    asgn   go to state 21
    stmt   go to state 57
    while  go to state 17
    if     go to state 18
    expr   go to state 53


state 34

   39 expr: expr OR . expr

    NUMBER  shift, and go to state 4
    VAR     shift, and go to state 6
    BLTIN   shift, and go to state 7
    '-'     shift, and go to state 10
    NOT     shift, and go to state 11
    '('     shift, and go to state 14

    asgn  go to state 21
    expr  go to state 58


state 35

   38 expr: expr AND . expr

    NUMBER  shift, and go to state 4
    VAR     shift, and go to state 6
    BLTIN   shift, and go to state 7
    '-'     shift, and go to state 10
    NOT     shift, and go to state 11
    '('     shift, and go to state 14

    asgn  go to state 21
    expr  go to state 59


state 36

   37 expr: expr NE . expr

    NUMBER  shift, and go to state 4
    VAR     shift, and go to state 6
    BLTIN   shift, and go to state 7
    '-'     shift, and go to state 10
    NOT     shift, and go to state 11
    '('     shift, and go to state 14

    asgn  go to state 21
    expr  go to state 60


state 37

   36 expr: expr EQ . expr

    NUMBER  shift, and go to state 4
    VAR     shift, and go to state 6
    BLTIN   shift, and go to state 7
    '-'     shift, and go to state 10
    NOT     shift, and go to state 11
    '('     shift, and go to state 14

    asgn  go to state 21
    expr  go to state 61


state 38

   35 expr: expr LE . expr

    NUMBER  shift, and go to state 4
    VAR     shift, and go to state 6
    BLTIN   shift, and go to state 7
    '-'     shift, and go to state 10
    NOT     shift, and go to state 11
    '('     shift, and go to state 14

    asgn  go to state 21
    expr  go to state 62


state 39

   34 expr: expr LT . expr

    NUMBER  shift, and go to state 4
    VAR     shift, and go to state 6
    BLTIN   shift, and go to state 7
    '-'     shift, and go to state 10
    NOT     shift, and go to state 11
    '('     shift, and go to state 14

    asgn  go to state 21
    expr  go to state 63


state 40

   33 expr: expr GE . expr

    NUMBER  shift, and go to state 4
    VAR     shift, and go to state 6
    BLTIN   shift, and go to state 7
    '-'     shift, and go to state 10
    NOT     shift, and go to state 11
    '('     shift, and go to state 14

    asgn  go to state 21
    expr  go to state 64


state 41

   32 expr: expr GT . expr

    NUMBER  shift, and go to state 4
    VAR     shift, and go to state 6
    BLTIN   shift, and go to state 7
    '-'     shift, and go to state 10
    NOT     shift, and go to state 11
    '('     shift, and go to state 14

    asgn  go to state 21
    expr  go to state 65


state 42

   26 expr: expr '+' . expr

    NUMBER  shift, and go to state 4
    VAR     shift, and go to state 6
    BLTIN   shift, and go to state 7
    '-'     shift, and go to state 10
    NOT     shift, and go to state 11
    '('     shift, and go to state 14

    asgn  go to state 21
    expr  go to state 66


state 43

   27 expr: expr '-' . expr

    NUMBER  shift, and go to state 4
    VAR     shift, and go to state 6
    BLTIN   shift, and go to state 7
    '-'     shift, and go to state 10
    NOT     shift, and go to state 11
    '('     shift, and go to state 14

    asgn  go to state 21
    expr  go to state 67


state 44

   28 expr: expr '*' . expr

    NUMBER  shift, and go to state 4
    VAR     shift, and go to state 6
    BLTIN   shift, and go to state 7
    '-'     shift, and go to state 10
    NOT     shift, and go to state 11
    '('     shift, and go to state 14

    asgn  go to state 21
    expr  go to state 68


state 45

   29 expr: expr '/' . expr

    NUMBER  shift, and go to state 4
    VAR     shift, and go to state 6
    BLTIN   shift, and go to state 7
    '-'     shift, and go to state 10
    NOT     shift, and go to state 11
    '('     shift, and go to state 14

    asgn  go to state 21
    expr  go to state 69


state 46

   30 expr: expr '^' . expr

    NUMBER  shift, and go to state 4
    VAR     shift, and go to state 6
    BLTIN   shift, and go to state 7
    '-'     shift, and go to state 10
    NOT     shift, and go to state 11
    '('     shift, and go to state 14

    asgn  go to state 21
    expr  go to state 70


state 47

    5 list: list expr '\n' .

    $default  reduce using rule 5 (list)


state 48

    7 asgn: VAR '=' expr .
   26 expr: expr . '+' expr
   27     | expr . '-' expr
   28     | expr . '*' expr
   29     | expr . '/' expr
   30     | expr . '^' expr
   32     | expr . GT expr
   33     | expr . GE expr
   34     | expr . LT expr
   35     | expr . LE expr
   36     | expr . EQ expr
   37     | expr . NE expr
   38     | expr . AND expr
   39     | expr . OR expr

    OR   shift, and go to state 34
    AND  shift, and go to state 35
    NE   shift, and go to state 36
    EQ   shift, and go to state 37
    LE   shift, and go to state 38
    LT   shift, and go to state 39
    GE   shift, and go to state 40
    GT   shift, and go to state 41
    '+'  shift, and go to state 42
    '-'  shift, and go to state 43
    '*'  shift, and go to state 44
    '/'  shift, and go to state 45
    '^'  shift, and go to state 46

    $default  reduce using rule 7 (asgn)


state 49

   24 expr: BLTIN '(' expr . ')'
   26     | expr . '+' expr
   27     | expr . '-' expr
   28     | expr . '*' expr
   29     | expr . '/' expr
   30     | expr . '^' expr
   32     | expr . GT expr
   33     | expr . GE expr
   34     | expr . LT expr
   35     | expr . LE expr
   36     | expr . EQ expr
   37     | expr . NE expr
   38     | expr . AND expr
   39     | expr . OR expr

    OR   shift, and go to state 34
    AND  shift, and go to state 35
    NE   shift, and go to state 36
    EQ   shift, and go to state 37
    LE   shift, and go to state 38
    LT   shift, and go to state 39
    GE   shift, and go to state 40
    GT   shift, and go to state 41
    '+'  shift, and go to state 42
    '-'  shift, and go to state 43
    '*'  shift, and go to state 44
    '/'  shift, and go to state 45
    '^'  shift, and go to state 46
    ')'  shift, and go to state 71


state 50

   19 stmtlist: stmtlist '\n' .

    $default  reduce using rule 19 (stmtlist)


state 51

   13 stmt: '{' stmtlist '}' .

    $default  reduce using rule 13 (stmt)


state 52

   20 stmtlist: stmtlist stmt .

    $default  reduce using rule 20 (stmtlist)


state 53

    8 stmt: expr .
   26 expr: expr . '+' expr
   27     | expr . '-' expr
   28     | expr . '*' expr
   29     | expr . '/' expr
   30     | expr . '^' expr
   32     | expr . GT expr
   33     | expr . GE expr
   34     | expr . LT expr
   35     | expr . LE expr
   36     | expr . EQ expr
   37     | expr . NE expr
   38     | expr . AND expr
   39     | expr . OR expr

    OR   shift, and go to state 34
    AND  shift, and go to state 35
    NE   shift, and go to state 36
    EQ   shift, and go to state 37
    LE   shift, and go to state 38
    LT   shift, and go to state 39
    GE   shift, and go to state 40
    GT   shift, and go to state 41
    '+'  shift, and go to state 42
    '-'  shift, and go to state 43
    '*'  shift, and go to state 44
    '/'  shift, and go to state 45
    '^'  shift, and go to state 46

    '-'       [reduce using rule 8 (stmt)]
    $default  reduce using rule 8 (stmt)


state 54

   25 expr: '(' expr ')' .

    $default  reduce using rule 25 (expr)


state 55

   14 cond: '(' expr . ')'
   26 expr: expr . '+' expr
   27     | expr . '-' expr
   28     | expr . '*' expr
   29     | expr . '/' expr
   30     | expr . '^' expr
   32     | expr . GT expr
   33     | expr . GE expr
   34     | expr . LT expr
   35     | expr . LE expr
   36     | expr . EQ expr
   37     | expr . NE expr
   38     | expr . AND expr
   39     | expr . OR expr

    OR   shift, and go to state 34
    AND  shift, and go to state 35
    NE   shift, and go to state 36
    EQ   shift, and go to state 37
    LE   shift, and go to state 38
    LT   shift, and go to state 39
    GE   shift, and go to state 40
    GT   shift, and go to state 41
    '+'  shift, and go to state 42
    '-'  shift, and go to state 43
    '*'  shift, and go to state 44
    '/'  shift, and go to state 45
    '^'  shift, and go to state 46
    ')'  shift, and go to state 72


state 56

   10 stmt: while cond stmt . end

    $default  reduce using rule 17 (end)

    end  go to state 73


state 57

   11 stmt: if cond stmt . end
   12     | if cond stmt . end ELSE stmt end

    $default  reduce using rule 17 (end)

    end  go to state 74


state 58

   26 expr: expr . '+' expr
   27     | expr . '-' expr
   28     | expr . '*' expr
   29     | expr . '/' expr
   30     | expr . '^' expr
   32     | expr . GT expr
   33     | expr . GE expr
   34     | expr . LT expr
   35     | expr . LE expr
   36     | expr . EQ expr
   37     | expr . NE expr
   38     | expr . AND expr
   39     | expr . OR expr
   39     | expr OR expr .

    AND  shift, and go to state 35
    NE   shift, and go to state 36
    EQ   shift, and go to state 37
    LE   shift, and go to state 38
    LT   shift, and go to state 39
    GE   shift, and go to state 40
    GT   shift, and go to state 41
    '+'  shift, and go to state 42
    '-'  shift, and go to state 43
    '*'  shift, and go to state 44
    '/'  shift, and go to state 45
    '^'  shift, and go to state 46

    $default  reduce using rule 39 (expr)


state 59

   26 expr: expr . '+' expr
   27     | expr . '-' expr
   28     | expr . '*' expr
   29     | expr . '/' expr
   30     | expr . '^' expr
   32     | expr . GT expr
   33     | expr . GE expr
   34     | expr . LT expr
   35     | expr . LE expr
   36     | expr . EQ expr
   37     | expr . NE expr
   38     | expr . AND expr
   38     | expr AND expr .
   39     | expr . OR expr

    NE   shift, and go to state 36
    EQ   shift, and go to state 37
    LE   shift, and go to state 38
    LT   shift, and go to state 39
    GE   shift, and go to state 40
    GT   shift, and go to state 41
    '+'  shift, and go to state 42
    '-'  shift, and go to state 43
    '*'  shift, and go to state 44
    '/'  shift, and go to state 45
    '^'  shift, and go to state 46

    $default  reduce using rule 38 (expr)


state 60

   26 expr: expr . '+' expr
   27     | expr . '-' expr
   28     | expr . '*' expr
   29     | expr . '/' expr
   30     | expr . '^' expr
   32     | expr . GT expr
   33     | expr . GE expr
   34     | expr . LT expr
   35     | expr . LE expr
   36     | expr . EQ expr
   37     | expr . NE expr
   37     | expr NE expr .
   38     | expr . AND expr
   39     | expr . OR expr

    '+'  shift, and go to state 42
    '-'  shift, and go to state 43
    '*'  shift, and go to state 44
    '/'  shift, and go to state 45
    '^'  shift, and go to state 46

    $default  reduce using rule 37 (expr)


state 61

   26 expr: expr . '+' expr
   27     | expr . '-' expr
   28     | expr . '*' expr
   29     | expr . '/' expr
   30     | expr . '^' expr
   32     | expr . GT expr
   33     | expr . GE expr
   34     | expr . LT expr
   35     | expr . LE expr
   36     | expr . EQ expr
   36     | expr EQ expr .
   37     | expr . NE expr
   38     | expr . AND expr
   39     | expr . OR expr

    '+'  shift, and go to state 42
    '-'  shift, and go to state 43
    '*'  shift, and go to state 44
    '/'  shift, and go to state 45
    '^'  shift, and go to state 46

    $default  reduce using rule 36 (expr)


state 62

   26 expr: expr . '+' expr
   27     | expr . '-' expr
   28     | expr . '*' expr
   29     | expr . '/' expr
   30     | expr . '^' expr
   32     | expr . GT expr
   33     | expr . GE expr
   34     | expr . LT expr
   35     | expr . LE expr
   35     | expr LE expr .
   36     | expr . EQ expr
   37     | expr . NE expr
   38     | expr . AND expr
   39     | expr . OR expr

    '+'  shift, and go to state 42
    '-'  shift, and go to state 43
    '*'  shift, and go to state 44
    '/'  shift, and go to state 45
    '^'  shift, and go to state 46

    $default  reduce using rule 35 (expr)


state 63

   26 expr: expr . '+' expr
   27     | expr . '-' expr
   28     | expr . '*' expr
   29     | expr . '/' expr
   30     | expr . '^' expr
   32     | expr . GT expr
   33     | expr . GE expr
   34     | expr . LT expr
   34     | expr LT expr .
   35     | expr . LE expr
   36     | expr . EQ expr
   37     | expr . NE expr
   38     | expr . AND expr
   39     | expr . OR expr

    '+'  shift, and go to state 42
    '-'  shift, and go to state 43
    '*'  shift, and go to state 44
    '/'  shift, and go to state 45
    '^'  shift, and go to state 46

    $default  reduce using rule 34 (expr)


state 64

   26 expr: expr . '+' expr
   27     | expr . '-' expr
   28     | expr . '*' expr
   29     | expr . '/' expr
   30     | expr . '^' expr
   32     | expr . GT expr
   33     | expr . GE expr
   33     | expr GE expr .
   34     | expr . LT expr
   35     | expr . LE expr
   36     | expr . EQ expr
   37     | expr . NE expr
   38     | expr . AND expr
   39     | expr . OR expr

    '+'  shift, and go to state 42
    '-'  shift, and go to state 43
    '*'  shift, and go to state 44
    '/'  shift, and go to state 45
    '^'  shift, and go to state 46

    $default  reduce using rule 33 (expr)


state 65

   26 expr: expr . '+' expr
   27     | expr . '-' expr
   28     | expr . '*' expr
   29     | expr . '/' expr
   30     | expr . '^' expr
   32     | expr . GT expr
   32     | expr GT expr .
   33     | expr . GE expr
   34     | expr . LT expr
   35     | expr . LE expr
   36     | expr . EQ expr
   37     | expr . NE expr
   38     | expr . AND expr
   39     | expr . OR expr

    '+'  shift, and go to state 42
    '-'  shift, and go to state 43
    '*'  shift, and go to state 44
    '/'  shift, and go to state 45
    '^'  shift, and go to state 46

    $default  reduce using rule 32 (expr)


state 66

   26 expr: expr . '+' expr
   26     | expr '+' expr .
   27     | expr . '-' expr
   28     | expr . '*' expr
   29     | expr . '/' expr
   30     | expr . '^' expr
   32     | expr . GT expr
   33     | expr . GE expr
   34     | expr . LT expr
   35     | expr . LE expr
   36     | expr . EQ expr
   37     | expr . NE expr
   38     | expr . AND expr
   39     | expr . OR expr

    '*'  shift, and go to state 44
    '/'  shift, and go to state 45
    '^'  shift, and go to state 46

    $default  reduce using rule 26 (expr)


state 67

   26 expr: expr . '+' expr
   27     | expr . '-' expr
   27     | expr '-' expr .
   28     | expr . '*' expr
   29     | expr . '/' expr
   30     | expr . '^' expr
   32     | expr . GT expr
   33     | expr . GE expr
   34     | expr . LT expr
   35     | expr . LE expr
   36     | expr . EQ expr
   37     | expr . NE expr
   38     | expr . AND expr
   39     | expr . OR expr

    '*'  shift, and go to state 44
    '/'  shift, and go to state 45
    '^'  shift, and go to state 46

    $default  reduce using rule 27 (expr)


state 68

   26 expr: expr . '+' expr
   27     | expr . '-' expr
   28     | expr . '*' expr
   28     | expr '*' expr .
   29     | expr . '/' expr
   30     | expr . '^' expr
   32     | expr . GT expr
   33     | expr . GE expr
   34     | expr . LT expr
   35     | expr . LE expr
   36     | expr . EQ expr
   37     | expr . NE expr
   38     | expr . AND expr
   39     | expr . OR expr

    '^'  shift, and go to state 46

    $default  reduce using rule 28 (expr)


state 69

   26 expr: expr . '+' expr
   27     | expr . '-' expr
   28     | expr . '*' expr
   29     | expr . '/' expr
   29     | expr '/' expr .
   30     | expr . '^' expr
   32     | expr . GT expr
   33     | expr . GE expr
   34     | expr . LT expr
   35     | expr . LE expr
   36     | expr . EQ expr
   37     | expr . NE expr
   38     | expr . AND expr
   39     | expr . OR expr

    '^'  shift, and go to state 46

    $default  reduce using rule 29 (expr)


state 70

   26 expr: expr . '+' expr
   27     | expr . '-' expr
   28     | expr . '*' expr
   29     | expr . '/' expr
   30     | expr . '^' expr
   30     | expr '^' expr .
   32     | expr . GT expr
   33     | expr . GE expr
   34     | expr . LT expr
   35     | expr . LE expr
   36     | expr . EQ expr
   37     | expr . NE expr
   38     | expr . AND expr
   39     | expr . OR expr

    '^'  shift, and go to state 46

    $default  reduce using rule 30 (expr)


state 71

   24 expr: BLTIN '(' expr ')' .

    $default  reduce using rule 24 (expr)


state 72

   14 cond: '(' expr ')' .

    $default  reduce using rule 14 (cond)


state 73

   10 stmt: while cond stmt end .

    $default  reduce using rule 10 (stmt)


state 74

   11 stmt: if cond stmt end .
   12     | if cond stmt end . ELSE stmt end

    ELSE  shift, and go to state 75

    ELSE      [reduce using rule 11 (stmt)]
    $default  reduce using rule 11 (stmt)


state 75

   12 stmt: if cond stmt end ELSE . stmt end

    NUMBER  shift, and go to state 4
    PRINT   shift, and go to state 5
    VAR     shift, and go to state 6
    BLTIN   shift, and go to state 7
    WHILE   shift, and go to state 8
    IF      shift, and go to state 9
    '-'     shift, and go to state 10
    NOT     shift, and go to state 11
    '{'     shift, and go to state 13
    '('     shift, and go to state 14

    asgn   go to state 21
    stmt   go to state 76
    while  go to state 17
    if     go to state 18
    expr   go to state 53


state 76

   12 stmt: if cond stmt end ELSE stmt . end

    $default  reduce using rule 17 (end)

    end  go to state 77


state 77

   12 stmt: if cond stmt end ELSE stmt end .

    $default  reduce using rule 12 (stmt)
