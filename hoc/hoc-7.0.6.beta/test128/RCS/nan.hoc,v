head	1.1;
access;
symbols;
locks
	beebe:1.1; strict;
comment	@# @;


1.1
date	2001.12.13.16.37.44;	author beebe;	state Exp;
branches;
next	;


desc
@Original version.
@


1.1
log
@Initial revision
@
text
@### -*-hoc-*-
### ====================================================================
### Test the correct handling of IEEE 754 NaN.
### [12-Dec-2001]
### ====================================================================

if (__IEEE_754__) \
{
	__TEST__ = "isnan(sqrt(-1))"
	__assert   (isnan(sqrt(-1)))		    
	
	__TEST__ = "isqnan(sqrt(-1))"
	__assert   (isqnan(sqrt(-1)))		    
	
	__TEST__ = "isnan(+0/+0)"
	__assert   (isnan(+0/+0))

	__TEST__ = "isnan(+0/-0)"
	__assert   (isnan(+0/-0))

	__TEST__ = "isnan(-0/+0)"
	__assert   (isnan(-0/+0))

	__TEST__ = "isnan(-0/-0)"
	__assert   (isnan(-0/-0))

	__TEST__ = "isqnan(+0/+0)"
	__assert   (isqnan(+0/+0))

	__TEST__ = "isqnan(+0/-0)"
	__assert   (isqnan(+0/-0))

	__TEST__ = "isqnan(-0/+0)"
	__assert   (isqnan(-0/+0))

	__TEST__ = "isqnan(-0/-0)"
	__assert   (isqnan(-0/-0))

	## Test with ordinary NaN, and three synonyms for infinity

	__TEST__ = "isnan(Inf - Inf)"
	__assert   (isnan(Inf - Inf))

	__TEST__ = "isnan(INF - INF)"
	__assert   (isnan(INF - INF))

	__TEST__ = "isnan(Infinity - Infinity)"
	__assert   (isnan(Infinity - Infinity))

	## Same test, with quiet NaN

	__TEST__ = "isqnan(Inf - Inf)"
	__assert   (isqnan(Inf - Inf))

	__TEST__ = "isqnan(INF - INF)"
	__assert   (isqnan(INF - INF))

	__TEST__ = "isqnan(Infinity - Infinity)"
	__assert   (isqnan(Infinity - Infinity))

	## Test with ordinary NaN, and three synonyms for infinity

	__TEST__ = "isnan(Inf / Inf)"
	__assert   (isnan(Inf / Inf))

	__TEST__ = "isnan(INF / INF)"
	__assert   (isnan(INF / INF))

	__TEST__ = "isnan(Infinity / Infinity)"
	__assert   (isnan(Infinity / Infinity))

	## Same test, with quiet NaN

	__TEST__ = "isqnan(Inf / Inf)"
	__assert   (isqnan(Inf / Inf))

	__TEST__ = "isqnan(INF / INF)"
	__assert   (isqnan(INF / INF))

	__TEST__ = "isqnan(Infinity / Infinity)"
	__assert   (isqnan(Infinity / Infinity))

	## Tests with named NaN constants

	__TEST__ = "isnan(NaN)"
	__assert   (isnan(NaN))

	__TEST__ = "isnan(SNaN)"
	__assert   (isnan(SNaN))

	__TEST__ = "isnan(QNaN)"
	__assert   (isnan(QNaN))

	__TEST__ = "isqnan(NaN)"
	__assert   (isqnan(NaN))

	__TEST__ = "isqnan(QNaN)"
	__assert   (isqnan(QNaN))

	__TEST__ = "issnan(SNaN)"
	__assert   (issnan(SNaN))

	## Same test again, for synonyms of NaN, QNaN, and SNaN

	__TEST__ = "isnan(NAN)"
	__assert   (isnan(NAN))

	__TEST__ = "isnan(SNAN)"
	__assert   (isnan(SNAN))

	__TEST__ = "isnan(QNAN)"
	__assert   (isnan(QNAN))

	__TEST__ = "isqnan(NAN)"
	__assert   (isqnan(NAN))

	__TEST__ = "isqnan(QNAN)"
	__assert   (isqnan(QNAN))

	__TEST__ = "issnan(SNAN)"
	__assert   (issnan(SNAN))

	## Tests that should NOT produce NaN

	__TEST__ = "!isnan(0)"
	__assert   (!isnan(0))

	__TEST__ = "!isnan(1)"
	__assert   (!isnan(1))

	__TEST__ = "!isnan(Inf)"
	__assert   (!isnan(Inf))

	__TEST__ = "!isnan(INF)"
	__assert   (!isnan(INF))

	__TEST__ = "!isnan(Infinity)"
	__assert   (!isnan(Infinity))

	__TEST__ = "!isnan(Inf + Inf)"
	__assert   (!isnan(Inf + Inf))

	__TEST__ = "!isnan(INF + INF)"
	__assert   (!isnan(INF + INF))

	__TEST__ = "!isnan(Infinity + Infinity)"
	__assert   (!isnan(Infinity + Infinity))

	__TEST__ = "!isnan(Inf * Inf)"
	__assert   (!isnan(Inf * Inf))

	__TEST__ = "!isnan(INF * INF)"
	__assert   (!isnan(INF * INF))

	__TEST__ = "!isnan(Infinity * Infinity)"
	__assert   (!isnan(Infinity * Infinity))

	__TEST__ = "!isnan(Inf * -Inf)"
	__assert   (!isnan(Inf * -Inf))

	__TEST__ = "!isnan(INF * -INF)"
	__assert   (!isnan(INF * -INF))

	__TEST__ = "!isnan(Infinity * -Infinity)"
	__assert   (!isnan(Infinity * -Infinity))

	__TEST__ = "!isnan(-Inf * -Inf)"
	__assert   (!isnan(-Inf * -Inf))

	__TEST__ = "!isnan(-INF * -INF)"
	__assert   (!isnan(-INF * -INF))

	__TEST__ = "!isnan(-Infinity * -Infinity)"
	__assert   (!isnan(-Infinity * -Infinity))

	__TEST__ = "!isnan(-Inf * Inf)"
	__assert   (!isnan(-Inf * Inf))

	__TEST__ = "!isnan(-INF * INF)"
	__assert   (!isnan(-INF * INF))

	__TEST__ = "!isnan(-Infinity * Infinity)"
	__assert   (!isnan(-Infinity * Infinity))

	## Same tests, with isqnan()

	__TEST__ = "!isqnan(0)"
	__assert   (!isqnan(0))

	__TEST__ = "!isqnan(1)"
	__assert   (!isqnan(1))

	__TEST__ = "!isqnan(Inf)"
	__assert   (!isqnan(Inf))

	__TEST__ = "!isqnan(INF)"
	__assert   (!isqnan(INF))

	__TEST__ = "!isqnan(Infinity)"
	__assert   (!isqnan(Infinity))

	__TEST__ = "!isqnan(Inf + Inf)"
	__assert   (!isqnan(Inf + Inf))

	__TEST__ = "!isqnan(INF + INF)"
	__assert   (!isqnan(INF + INF))

	__TEST__ = "!isqnan(Infinity + Infinity)"
	__assert   (!isqnan(Infinity + Infinity))

	__TEST__ = "!isqnan(Inf * Inf)"
	__assert   (!isqnan(Inf * Inf))

	__TEST__ = "!isqnan(INF * INF)"
	__assert   (!isqnan(INF * INF))

	__TEST__ = "!isqnan(Infinity * Infinity)"
	__assert   (!isqnan(Infinity * Infinity))

	__TEST__ = "!isqnan(Inf * -Inf)"
	__assert   (!isqnan(Inf * -Inf))

	__TEST__ = "!isqnan(INF * -INF)"
	__assert   (!isqnan(INF * -INF))

	__TEST__ = "!isqnan(Infinity * -Infinity)"
	__assert   (!isqnan(Infinity * -Infinity))

	__TEST__ = "!isqnan(-Inf * -Inf)"
	__assert   (!isqnan(-Inf * -Inf))

	__TEST__ = "!isqnan(-INF * -INF)"
	__assert   (!isqnan(-INF * -INF))

	__TEST__ = "!isqnan(-Infinity * -Infinity)"
	__assert   (!isqnan(-Infinity * -Infinity))

	__TEST__ = "!isqnan(-Inf * Inf)"
	__assert   (!isqnan(-Inf * Inf))

	__TEST__ = "!isqnan(-INF * INF)"
	__assert   (!isqnan(-INF * INF))

	__TEST__ = "!isqnan(-Infinity * Infinity)"
	__assert   (!isqnan(-Infinity * Infinity))

	## Same tests, with issnan()

	__TEST__ = "!issnan(0)"
	__assert   (!issnan(0))

	__TEST__ = "!issnan(1)"
	__assert   (!issnan(1))

	__TEST__ = "!issnan(Inf)"
	__assert   (!issnan(Inf))

	__TEST__ = "!issnan(INF)"
	__assert   (!issnan(INF))

	__TEST__ = "!issnan(Infinity)"
	__assert   (!issnan(Infinity))

	__TEST__ = "!issnan(Inf + Inf)"
	__assert   (!issnan(Inf + Inf))

	__TEST__ = "!issnan(INF + INF)"
	__assert   (!issnan(INF + INF))

	__TEST__ = "!issnan(Infinity + Infinity)"
	__assert   (!issnan(Infinity + Infinity))

	__TEST__ = "!issnan(Inf * Inf)"
	__assert   (!issnan(Inf * Inf))

	__TEST__ = "!issnan(INF * INF)"
	__assert   (!issnan(INF * INF))

	__TEST__ = "!issnan(Infinity * Infinity)"
	__assert   (!issnan(Infinity * Infinity))

	__TEST__ = "!issnan(Inf * -Inf)"
	__assert   (!issnan(Inf * -Inf))

	__TEST__ = "!issnan(INF * -INF)"
	__assert   (!issnan(INF * -INF))

	__TEST__ = "!issnan(Infinity * -Infinity)"
	__assert   (!issnan(Infinity * -Infinity))

	__TEST__ = "!issnan(-Inf * -Inf)"
	__assert   (!issnan(-Inf * -Inf))

	__TEST__ = "!issnan(-INF * -INF)"
	__assert   (!issnan(-INF * -INF))

	__TEST__ = "!issnan(-Infinity * -Infinity)"
	__assert   (!issnan(-Infinity * -Infinity))

	__TEST__ = "!issnan(-Inf * Inf)"
	__assert   (!issnan(-Inf * Inf))

	__TEST__ = "!issnan(-INF * INF)"
	__assert   (!issnan(-INF * INF))

	__TEST__ = "!issnan(-Infinity * Infinity)"
	__assert   (!issnan(-Infinity * Infinity))
}
@
