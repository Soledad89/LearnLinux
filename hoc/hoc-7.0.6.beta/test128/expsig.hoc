### -*-hoc-*-
### ====================================================================
### Test exponent() and significand() together.
### [31-Dec-2001]
### ====================================================================

eps = macheps(1)
scale_plus = 1 + eps
scale_minus = 1 - eps/2
scale_alt = 2/3			# alternating 0 and 1 bits: +0x1.5555555555555p-1

for (x = MINSUBNORMAL; x <= MINNORMAL; x *= 2) \
{
	__TEST__ = "x == (significand(x) * 2^(exponent(x) + 112)) * 2^(-112)"
	__assert   (x == (significand(x) * 2^(exponent(x) + 112)) * 2^(-112))
}

for (x = MINNORMAL; x <= MAXNORMAL; x *= 2) \
{
	__TEST__ = "x == significand(x) * 2^exponent(x)"
	__assert   (x == significand(x) * 2^exponent(x))
}

for (x = MINNORMAL; x < MAXNORMAL; x *= 2) \
{
	y = x * scale_plus
	__TEST__ = "y == significand(y) * 2^exponent(y)"
	__assert   (y == significand(y) * 2^exponent(y))
}

for (x = 2*MINNORMAL; x <= MAXNORMAL; x *= 2) \
{
	y = x * scale_alt
	__TEST__ = "y == significand(y) * 2^exponent(y)"
	__assert   (y == significand(y) * 2^exponent(y))
}

for (x = 2*MINNORMAL; x <= MAXNORMAL; x *= 2) \
{
	y = x * scale_minus
	__TEST__ = "y == significand(y) * 2^exponent(y)"
	__assert   (y == significand(y) * 2^exponent(y))
}

__assert (isnan(significand(NaN) * 2^exponent(NaN)))
__assert (isnan(significand(+NaN) * 2^exponent(+NaN)))
__assert (isnan(significand(-NaN) * 2^exponent(-NaN)))

__assert (isnan(significand(QNaN) * 2^exponent(QNaN)))
__assert (isnan(significand(+QNaN) * 2^exponent(+QNaN)))
__assert (isnan(significand(-QNaN) * 2^exponent(-QNaN)))

__assert (isnan(significand(SNaN) * 2^exponent(SNaN)))
__assert (isnan(significand(+SNaN) * 2^exponent(+SNaN)))
__assert (isnan(significand(-SNaN) * 2^exponent(-SNaN)))

__assert (isinf(significand(Inf) * 2^exponent(Inf)))
__assert (isinf(significand(+Inf) * 2^exponent(+Inf)))
__assert (isinf(significand(-Inf) * 2^exponent(-Inf)))
