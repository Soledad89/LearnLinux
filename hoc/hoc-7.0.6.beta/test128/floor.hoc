### -*-hoc-*-
### ====================================================================
### Test floor().
### [10-Dec-2001]
### ====================================================================

proc scaled_floor_check() \
{
	global __SCALE__, __TEST__

	__x = __SCALE__ * $1

	## print "DEBUG 1:", $1, __SCALE__, __x, "\n"

	## d = floor(__x) - __x

	__TEST__ = "abs(floor(__x) - __x) < 1"
	__assert   (abs(floor(__x) - __x) < 1)

	## print "DEBUG 2:", $1, __SCALE__, __x, "\n"

	__TEST__ = "floor(__x) <= __x"
	__assert   (floor(__x) <= __x)

	if (floor(__x) == int(__x)) \
	{
	} \
	else \
	{
		if (__x >= 0) \
		{
			__TEST__ = "floor(__x) == int(__x)"
			__assert   (floor(__x) == int(__x))
		} \
		else \
		{
			__TEST__ = "floor(__x) == int(__x - 1)"
			__assert   (floor(__x) == int(__x - 1))
		}
	}
	## print "DEBUG 3:", $1, __SCALE__, __x, "\n"
}

__n = -log2(macheps(1))

for (__k = 1 ; __k <= __n; ++__k) \
{
	__SCALE__ = 2^__k
	scaled_floor_check(2 + 2^-__k)
	scaled_floor_check(2 - 2^-__k)
	scaled_floor_check(1 + 2^-__k)
	scaled_floor_check(1 - 2^-__k)
	scaled_floor_check(0 + 2^-__k)
	scaled_floor_check(0 - 2^-__k)
}

__TEST__ = "isnan(floor(NaN))"
__assert   (isnan(floor(NaN)))

__TEST__ = "isnan(floor(-NaN))"
__assert   (isnan(floor(-NaN)))

__TEST__ = "isinf(floor(Inf))"
__assert   (isinf(floor(Inf)))

__TEST__ = "isinf(floor(-Inf))"
__assert   (isinf(floor(-Inf)))
