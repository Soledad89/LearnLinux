------------------------------------------------------------------------
[09-Aug-2002]: hoc-7.0.6.beta

New functions:	snan()

New statement:	global

New features:	Functions and procedures now take named
	arguments, and variables inside functions and procedures are
	automatically local, unless declared global.

------------------------------------
[30-Jul-2002]: hoc-7.0.5.beta

New statements:	break, continue, sprintf.

New functions:	char(), decrypt(), encrypt(), ftoh(), htof(),
	and ichar().

New features:	printf now supports %c format descriptor.

------------------------------------
[17-Jul-2002]: hoc-7.0.4.beta

New built-in constants:	__NATIVE_xxx__.

New built-in variable:	__INDENT__.

New features:	hoc number syntax has been extended to recognize Fortran
	exponent letters (D, d, Q, and q), C/C++ precision suffixes L
	and l, and C/C++/Java precision suffixes F and f.  printenv(),
	save(), and who() now take a UNIX-shell-style pattern instead
	of a fixed prefix.

New functions:	double(x), matula(nbits), single(x).

New operators:	** (to-the-power: synonym for ^).

New statements:	printf.

------------------------------------
[30-Jan-2002]: hoc-7.0.3.beta

Maintenance release:	No user-visible new features.
------------------------------------
[27-Jan-2002]: hoc-7.0.2.beta

New binary operator:	<>

New built-in constants:	BASE, CLASS_xxx, EBIAS, EBITS, EMAX, EMIN, and P.

New features:	hoc32, hoc80, and hoc128 now provide access to other
	floating-point precisions.  Internationalization support makes
	it straightforward to provide hoc function and procedure
	documentation in other human languages.  A numeric fortune
	cookie library adds amusement.  Better support for string
	arguments in hoc functions and procedures.

New functions:	__msg_translate(), class(x), find_fortune(), fortune(),
	isprime(number), next_prime(number), nth_prime(n),
	prev_prime(number), prime_factors(number), primes_between(i,j),
	this_or_next_prime(number), this_or_prev_prime(number),
	unordered(x,y), and corresponding help_xxx() functions.

New libraries:	fortune.hoc, primes.hoc
------------------------------------
[15-Dec-2001]: hoc-7.0.1.beta

The original Kernighan and Pike hoc (high-order calculator) has been
extended with additional functions, and support for features of IEEE 754
floating-point arithmetic.

New functions:	acosh(x), asinh(x), atanh(x), cbrt(x), cd(s), ceil(x),
		copysign(x,y), cosd(x), cpulimit(x), defined(n),
		delete(n), dirs(), eval(s), errbits(x,y), expm1(x),
		exponent(x), factorial(x), floor(x), fmod(x,y),
		gcd(x,y), getenv(s), hexfp(x), hexint(x), hypot(x,y),
		ilogb(x), index(s,t), isfinite(x), isinf(x), isnan(x),
		isnormal(x), isqnan(x), issnan(x), issubnormal(x),
		J0(x), J1(x), Jn(n,x), Jn(x,y), lcm(x,y), ldexp(x,y),
		length(s), lgamma(x), load(file), log1p(x), log2(x)
		logfile(file), logoff(), logon(), macheps(x),
		max(x,y), maxnormal(), min(x,y), minnormal(),
		minsubnormal(), msg_translate(s), nearest(x,y),
		nextafter(x,y), nint(x), now(), number(s), popd(),
		printenv(prefix), protect(s), pushd(s), putenv(s,v),
		pwd(), rand(x), randint(x,y), randl(x),
		remainder(x,y), rint(x), rsqrt(x), save(file,prefix),
		scalb(x,y), second(), set_locale(s), setrand(x),
		significand(x), sin(x), sind(x), sinh(x), sqrt(x),
		strftime(s,v), string(x), substr(s,start,length),
		symnum(s), symstr(s), systime(), tan(x), tand(x),
		tanh(x), tolower(s), toupper(s), trunc(x), xd(),
		Y0(x), Y1(x), Yn(n,y), and Yn(x,y).

New procedures:	abort(), author(), who().

New command-line options:	--?, --author, --copyright, --Dname,
		--Dname=number, --Dname="string", --Dname=symbol,
		--help, --no-banner, --no-cd, --no-help-file,
		--no-load, --no-logfile, --no-readline, --no-save
		--no-site-file, --no-translation-file, --no-user-file,
		--quick, --secure, --silent, --Uname, --version.

New constants and variables:	_, __, __BANNER__, __CPU_LIMIT__, __DATE__,
		__FILE__, __FILE__[*], __GID__, __HOCRC__, __IEEE_754__,
		__LINE__, __MAX_xxx__, __PACKAGE_BUGREPORT__,
		__PACKAGE_DATE__, __PACKAGE_NAME__, __PACKAGE_STRING__,
		__PACKAGE_VERSION__, __PID__, __PROMPT__, __READLINE__,
		__SYSHOCDIR__, __SYSHOCHLPBASE__, __SYSHOCHLP__,
		__SYSHOCPATH__, __SYSHOCRCBASE__, __SYSHOCRC__,
		__SYSHOCXLTBASE__, __SYSHOCXLT__, __TIME__, __UID__,
		__VERBOSE__

New floating-point constants:	CATALAN, INF, Inf, Infinity, MAXNORMAL,
		MINNORMAL, MINSUBNORMAL, NAN, NaN, QNAN, QNaN, SNAN,
		SNaN

New statement:	println

An extensive help facility has been implemented.  For each function
or procedure foo(), there is a corresponding procedure help_foo().
There are also help_xxx() functions for various topics and language
features.

Limited internationalization of hoc has begun.  Set the LANG or
LC_MESSAGES or LC_ALL environment variable to a suitable locale code
before running hoc.  Currently, codes da (Danish), de (German), en
(English), es (Spanish), fr (French), hr (Croatian), pt (Portuguese),
and tr (Turkish) are supported.

------------------------------------
[26-Nov-2001]--[13-Dec-2001]: hoc-7.0.0.beta

	Begin development work with these goals:

	(1) Repackage 1984-vintage hoc-6 with modern automatic
	    configuration and testing.

	(2) Make extensive additions to the language and the
	    run-time library, particularly for support of IEEE 754
	    floating-point arithmetic.

	(3) Serve as a testbed for work on the on-going revision of
	    the 1985 IEEE 754 Standard.

	(4) Provide an extensive help system for the hoc language
	    and library.

	(5) Provide a student interactive learning environment that
	    introduces a small, easy-to-learn, subset of C/C++.

	(6) Internationalize hoc-7 so that it can be comfortably used
	    by school children in any language for which hoc message
	    translations have been prepared.  All such translations
	    must be external to hoc, and must be dynamically loadable.

	(7) Make hoc-7 trivially portable to virtually all common
	    desktop and handheld computing environments.

	(8) Provide an open software development environment for
	    students to learn about, and experiment with, lexing and
	    parsing techniques for a small clean language.

------------------------------------------------------------------------
