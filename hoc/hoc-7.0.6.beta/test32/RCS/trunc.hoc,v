head	1.1;
access;
symbols;
locks
	beebe:1.1; strict;
comment	@# @;


1.1
date	2002.08.06.13.42.36;	author beebe;	state Exp;
branches;
next	;


desc
@Original version.
@


1.1
log
@Initial revision
@
text
@### -*-hoc-*-
### ====================================================================
### Test the trunc() function, particularly for negative values near
### zero.
### [26-Jan-2002]
### ====================================================================

for (k = 0; k <= 23; ++k) \
{
	__TEST__ = "trunc(2^" k " - 1 + 0.5) == (2^" k " - 1)"
	__assert   (trunc(2^k - 1 + 0.5) == (2^k - 1))
	__TEST__ = "trunc(-(2^" k " - 1 + 0.5)) == -(2^" k " - 1)"
	__assert   (trunc(-(2^k - 1 + 0.5)) == -(2^k - 1))
}

for (x = MINSUBNORMAL; x < 1; x *= 2) \
{
	__TEST__ = "trunc(" x ") == 0"
	__assert   (trunc(x) == 0)
	__TEST__ = "(trunc(" string(-x) ") == 0) && (copysign(1,trunc(" string(-x) ")) == -1)"
	__assert   ((trunc(-x) == 0) && (copysign(1,trunc(-x)) == -1))
}
@
