head	1.4;
access;
symbols;
locks
	beebe:1.4; strict;
comment	@ * @;


1.4
date	2002.07.30.18.07.25;	author beebe;	state Exp;
branches;
next	1.3;

1.3
date	2002.07.20.23.08.14;	author beebe;	state Exp;
branches;
next	1.2;

1.2
date	2002.01.11.02.37.11;	author beebe;	state Exp;
branches;
next	1.1;

1.1
date	2002.01.01.13.18.21;	author beebe;	state Exp;
branches;
next	;


desc
@Original version.
@


1.4
log
@Add declaration of irl_free().
@
text
@#if !defined(READLINE_H)
#define READLINE_H

#undef EXTERN
#if defined(__cplusplus) || defined(c_plusplus)
#define EXTERN extern "C"
#else
#define EXTERN extern
#endif

#include "fp_t.h"

#if defined(HAVE_READLINE_READLINE_H)
#include <readline/readline.h>
#endif

#if defined(HAVE_READLINE_HISTORY_H)
#include <readline/history.h>
#endif

/* Interface from readline.c to hoc.y */

extern int		irl_fd_stdin;

extern int		irl_fscanf ARGS((FILE *,const char *,void *));
extern int		irl_getchar ARGS((FILE *));
extern int		irl_unget_char ARGS((int));
extern void		irl_free ARGS((void));
extern void		irl_push_input ARGS((void));
extern void		irl_pop_input ARGS((void));

/* Interface from hoc.y to readline.c */

extern void		execerror ARGS((const char*, const char*));
extern const char*	get_prompt ARGS((void));
extern int		get_verbose ARGS((void));

/* Interface from symbol.c to readline.c */

extern const char *	dupstr ARGS((const char *));
extern const char *	first_symbol_pname ARGS((void));
extern const char *	next_symbol_pname ARGS((void));

#endif /* !defined(READLINE_H)) */
@


1.3
log
@Add definition of EXTERN, which is now needed because fp_t.h requires it.
@
text
@d28 1
@


1.2
log
@Remove definitions of MAX_xxx macros, since their arrays now
grow dynamically.

Change type for irl_unget_char() from void to int, to match
that of ungetc().
@
text
@d4 7
@


1.1
log
@Initial revision
@
text
@a5 22
/* Set dimensions that are fixed at compile time, but whose default
   values may be overridden by compile-time -DMAX_xxx=nnn options.
   Some of these have documented minimum values (see hoc.1) which must
   be enforced here.  All are made available for user inspection in
   __MAX_xxx__ predefined constants. */

#if !defined(MAX_PUSHBACK)
#define MAX_PUSHBACK	10240		/* needs to be big for eval() command support */
#endif
#if (MAX_PUSHBACK + 0) < 10240		/* avoid silly small values */
#undef MAX_PUSHBACK
#define MAX_PUSHBACK	10240
#endif

#if !defined(MAX_TOKEN)
#define MAX_TOKEN	512
#endif
#if (MAX_TOKEN + 0) < 63		/* avoid silly small values */
#undef MAX_TOKEN
#define MAX_TOKEN	63
#endif

d20 1
a20 1
extern void		irl_unget_char ARGS((int));
@
