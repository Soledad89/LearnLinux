head	1.21;
access;
symbols;
locks
	beebe:1.21; strict;
comment	@# @;


1.21
date	2002.07.30.20.38.07;	author beebe;	state Exp;
branches;
next	1.20;

1.20
date	2002.07.27.17.36.12;	author beebe;	state Exp;
branches;
next	1.19;

1.19
date	2002.07.27.03.47.58;	author beebe;	state Exp;
branches;
next	1.18;

1.18
date	2002.07.20.22.50.14;	author beebe;	state Exp;
branches;
next	1.17;

1.17
date	2002.06.23.17.52.01;	author beebe;	state Exp;
branches;
next	1.16;

1.16
date	2002.02.19.01.05.17;	author beebe;	state Exp;
branches;
next	1.15;

1.15
date	2002.01.30.16.23.14;	author beebe;	state Exp;
branches;
next	1.14;

1.14
date	2002.01.28.17.52.46;	author beebe;	state Exp;
branches;
next	1.13;

1.13
date	2002.01.28.13.17.02;	author beebe;	state Exp;
branches;
next	1.12;

1.12
date	2002.01.27.17.55.30;	author beebe;	state Exp;
branches;
next	1.11;

1.11
date	2002.01.17.01.35.30;	author beebe;	state Exp;
branches;
next	1.10;

1.10
date	2002.01.16.18.44.34;	author beebe;	state Exp;
branches;
next	1.9;

1.9
date	2002.01.11.16.43.45;	author beebe;	state Exp;
branches;
next	1.8;

1.8
date	2002.01.11.02.06.03;	author beebe;	state Exp;
branches;
next	1.7;

1.7
date	2002.01.05.14.49.32;	author beebe;	state Exp;
branches;
next	1.6;

1.6
date	2002.01.04.17.49.57;	author beebe;	state Exp;
branches;
next	1.5;

1.5
date	2002.01.02.21.43.05;	author beebe;	state Exp;
branches;
next	1.4;

1.4
date	2002.01.01.15.13.08;	author beebe;	state Exp;
branches;
next	1.3;

1.3
date	2002.01.01.14.42.45;	author beebe;	state Exp;
branches;
next	1.2;

1.2
date	2001.12.12.01.19.58;	author beebe;	state Exp;
branches;
next	1.1;

1.1
date	2001.12.11.15.12.16;	author beebe;	state Exp;
branches;
next	;


desc
@Major revision with autoconfigure support, and GNU standard targets.
@


1.21
log
@Add crypto.hoc, decrypt.hoc, and encrypt.hoc to HOCFILES.
@
text
@### @@configure_input@@
### ====================================================================
### Makefile for the extensible high-order calculator, hoc.
###
### Current target list:
###	all
###	ansi2knr
###	asm
###	bundle
###	check
###	check-a
###	check-b
###	check-c
###	check-d
###	check-e
###	check-f
###	check-g
###	chkctype
###	chkctype.i
###	chkctype.s
###	chkgamma
###	chkgamma.i
###	chkgamma.s
###	chkieee
###	chkieee.i
###	chkieee.s
###	chklocale
###	chklocale.i
###	chklocale.s
###	chkscalb
###	chkscalb.i
###	chkscalb.s
###	chkstore.i
###	chkstore.s
###	chkstrtod.i
###	chkstrtod.s
###	clean
###	clean-dirs
###	clean-dist
###	clean-doc
###	clean-exe
###	clean-html
###	clean-pdf
###	clean-ps
###	clean-test
###	clean-txt
###	code.i
###	code.s
###	code.o
###	config.h
###	config.status
###	configure
###	convert-to-knr
###	dist
###	distclean
###	doc
###	hoc
###	hoc.c
###	hoc.html
###	hoc.i
###	hoc.s
###	hoc.o
###	hoc.pdf
###	hoc.ps
###	hoc.txt
###	ieee754.i
###	ieee754.s
###	ieee754.o
###	init.i
###	init.s
###	init.o
###	install
###	install-el
###	install-exe
###	install-ftp
###	install-hlp
###	install-lib
###	install-man
###	install-mkdirs
###	install-rc
###	install-share
###	install-show
###	io.i
###	io.s
###	io.o
###	maintainer-clean
###	Makefile
###	math.i
###	math.s
###	math.o
###	mostlyclean
###	pr
###	readline.o
###	reconfigure
###	rsync
###	random.i
###	random.s
###	random.o
###	store.i
###	store.s
###	store.o
###	string.i
###	string.s
###	string.o
###	symbol.i
###	symbol.s
###	symbol.o
###	TAGS
###	time.i
###	time.s
###	time.o
###	translations.tmp
###	uninstall
###	uninstall-el
###	uninstall-exe
###	uninstall-ftp
###	uninstall-hlp
###	uninstall-lib
###	uninstall-man
###	uninstall-rc
###	update-save
###	xtab.h
###	ytab.h
###
### [05-Jan-2002]
### ====================================================================

PACKAGE_DATE	= @@PACKAGE_DATE@@
PACKAGE_NAME	= @@PACKAGE_NAME@@
PACKAGE_VERSION	= @@PACKAGE_VERSION@@

PROGRAM		= $(PACKAGE_NAME)
VERSION		= $(PACKAGE_VERSION)

prefix		= @@prefix@@
bindir		= $(prefix)/bin
catdir		= $(prefix)/man/cat$(manext)
emacsdir	= $(prefix)/share/emacs/site-lisp
localedir	= $(shrlibdir)/locale
mandir		= $(prefix)/man/man$(manext)
manext		= 1
shrlibdir	= $(shrlibdirtop)/$(HOCVERSION)
shrlibdirtop	= $(prefix)/share/lib/$(PROGRAM)
srcdir		= @@srcdir@@

### ====================================================================
### Compiler names and options:

CC		= @@CC@@

CFLAGS		= @@CFLAGS@@ $(INCLUDES) $(DEFS) $(OPT) $(XCFLAGS)

DEFS		= @@DEFS@@ $(XDEFS)

INCLUDES	= -I$(srcdir) $(XINCLUDES)

### For GNU compilers:				-Wl,-rpath $(prefix)/lib
### For OSF/1 and IRIX native compilers:	-rpath $(prefix)/lib
### For Sun native compilers:			-R$(prefix)/lib
### Portable (if LD_LIBRARY_PATH is set):
LDFLAGS		= @@LDFLAGS@@ $(XLDFLAGS)

### Some systems have -lcurses, others have -lncurses, and most need -lm
LIBS		= @@LIBS@@ $(XLIBS)

OPT		= -g $(XOPT)

### The X* variables are for convenient command-line augmentation of
### the defaults:

XCFLAGS		=

### Array sizes that can be changed at compile time by -DMAX_xxx=nnn
### options (e.g., XDEFS="-DMAX_PROG=65536"):
###
###	-----------------------------------------------------------------------
###	Source file	Named constant	Default Description
###	-----------------------------------------------------------------------
###	code.c		MAX_PROG	32767	virtual machine instruction limit
###	-----------------------------------------------------------------------
###
### The default values shown should be sufficiently generous that increases
### should be rarely needed.  If any of these values are changed, failures of
### "make check-d" are expected, since the test files a setup to probe each
### of the above default limits.

XDEFS		=

XINCLUDES	=

XLCLINTDEFS	=

### -shiftsigned is for lclint, -bitwisesigned et al for splint
XLCLINTFLAGS	= -shiftsigned
XLCLINTFLAGS	= -bitwisesigned -shiftnegative -shiftimplementation

XLCLINTINCLUDES	=

XLDFLAGS	=

XLIBS		=

XLINTDEFS	=

XLINTFLAGS	=

XOPT		=

YACC		= @@YACC@@

### yacc -d: generate y.tab.h file
YFLAGS		= -d

### ====================================================================
### Other programs needed for this Makefile:

AUTOCONF	= @@AUTOCONF@@

AUTOHEADER	= @@AUTOHEADER@@

AWK		= @@AWK@@

CHMOD		= @@CHMOD@@

CMP		= @@CMP@@

COL		= @@COL@@

CP		= @@CP@@

DEROFF		= @@DEROFF@@

ETAGS		= @@ETAGS@@

FIND		= @@FIND@@

FGREP		= @@FGREP@@

GROFF		= @@GROFF@@

GUNZIP		= @@GUNZIP@@

GZIP		= @@GZIP@@

JAR		= @@JAR@@

LCLINT		= @@LCLINT@@

### lclint (available at http://lclint.cs.virginia.edu/) is a powerful
### extended lint implementation with a great many options.
###
### In mid February 2002, a renamed replacement, splint, was
### announced.  It can be found at http://www.splint.org/downloads/,
### and there is now a technical paper published about it:
###
###	David Evans and David Larochelle
###	Improving Security Using Extensible Lightweight Static Analysis
###	IEEE Software 19(1), 42--51, January/February 2002
###     CODEN IESOEG, ISSN 0740-7459
###
### The two programs are largely compatible, although splint has
### renamed a few old lclint options.  The companion configure script
### will try to find first splint, then lclint.
###
### The trick with lint programs is to find a set that produce useful
### output, without hiding important complaints in a mass of less
### important messages.  The set below seems to work reasonably for
### the DVI driver family on Sun Solaris 2.7, and is probably usable
### on other systems as well.  Any of these can options be turned back
### on at make time by supplying them with a plus prefix, e.g.,
###
### 	make lclint XLCLINTFLAGS='+varuse'
###
### NB: For use with other programs, these options could be installed in
### $HOME/.lclintrc, one per line (removing the backslashes), and
### optionally commented from sharp (#) to end of line.  The -nof option
### below suppresses the loading of user customization files, so that we
### do not provide any other options than the ones shown here.

LCLINTDEFS	= -DOPEN_MAX=20 \
		  -D__STDC__ \
		  -D__sparc \
		  -D'fileno(f)=0' \
		  $(SYSHOCDEFS) \
		  $(XLCLINTDEFS)

LCLINTFLAGS	= $(LCLINTDEFS) \
		  $(LCLINTINCLUDES) \
		  -boolops \
		  -booltype BOOLEAN \
		  -branchstate \
		  -castfcnptr \
		  -compdef \
		  -compmempass \
		  -dependenttrans \
		  -exitarg \
		  -exportlocal \
		  -fileextensions \
		  -fixedformalarray \
		  -formatconst \
		  -globstate \
		  -ifempty \
		  -immediatetrans \
		  -incondefs \
		  -macrovarprefixexclude \
		  -mayaliasunique \
		  -mustfree \
		  -mutrep \
		  -nof \
		  -nullassign \
		  -nullpass \
		  -nullret \
		  -nullstate \
		  -observertrans \
		  -onlytrans \
		  -paramuse \
		  -predboolint \
		  -predboolothers \
		  -realcompare \
		  -statictrans \
		  -sysunrecog \
		  -temptrans \
		  -type \
		  -unqualifiedtrans \
		  -unreachable \
		  -unsignedcompare \
		  -usedef \
		  -varuse \
		  -warnposix \
		  +voidabstract \
		  $(LCLINTOTHERFLAGS) \
		  $(XLCLINTFLAGS)

LCLINTINCLUDES	= -I$(prefix)/include

### These additional lclint flags may be only temporarily desirable:
LCLINTOTHERFLAGS = \
		  -formattype \
		  -redef

LCLINTSRCS	= $(SRCS)

LINT		= @@LINT@@

LINTDEFS	= -Dinline= $(SYSHOCDEFS) $(XLINTDEFS)

# These values are for Sun Solaris 2.6 lint
LINTFLAGS       = -errchk=%all -errhdr=. -errtags -fd -I. -Ncheck=%all \
		  -Nlevel=4 -p -Xtransition=yes -D__cplusplus=1 \
		  $(LINTDEFS) $(LINTINCLUDES) $(XLINTFLAGS)

LINTFLAGS       = -errchk=%all -errhdr=. -errtags -fd -I. -Ncheck=%all \
		  -Nlevel=4 -p -Xtransition=yes $(LINTDEFS) \
		  $(LINTINCLUDES) $(XLINTFLAGS)

LINTFLAGS	= -bchx -I. $(LINTDEFS) $(LINTINCLUDES) $(XLINTFLAGS)

LINTINCLUDES	= -I$(prefix)/include

LINTSRCS	= $(SRCS)

LN		= @@LN@@

LS		= @@LS@@

MAN2HTML	= @@MAN2HTML@@

MAN2HTMLFLAGS	= -grammar-level 3.2

MKDIR		= @@MKDIR@@ 2>/dev/null

MV		= @@MV@@

PSTOPDF		= @@PSTOPDF@@

PSTOPDFFLAGS	=

RM		= @@RM@@ -f

RMDIR		= @@RMDIR@@

RSYNC		= rsync

RSYNCFLAGS	= --rsh ssh --links --times --update --ignore-times --cvs-exclude

SED		= @@SED@@

### Recent versions of autoconf override setting of SHELL in configure.in, sigh...
SHELL		= @@SHELL@@
SHELL		= /bin/sh

SORT		= @@SORT@@

SPELL		= @@SPELL@@

STRIP		= @@STRIP@@

### During development, we don't want debug symbols stripped at
### installation time:
STRIP		= echo @@STRIP@@

TAR		= @@TAR@@

TEST		= @@TEST@@

TOUCH		= @@TOUCH@@

TRUE		= @@TRUE@@

UNZIP		= @@UNZIP@@

ZIP		= @@ZIP@@

ZOO		= @@ZOO@@

### ====================================================================
### File names in this package:

FILELIST	= `$(FIND) $(HOCVERSION) -type f | $(SORT)`

### This applies only to the hoc master archive site, as do
### the install-ftp and uninstall-ftp targets:
FTPDIR		= /u/ftp/pub/hoc

FTPFILES        = index.html INSTALL $(HTMLFILES) $(PDFFILES) \
		  $(PSFILES) $(PSGZFILES) $(SSHFILES) $(TXTFILES) \
		  $(HOCVERSION).jar $(HOCVERSION).tar.gz \
		  $(HOCVERSION).zip $(HOCVERSION).zoo

### Where hoc is found when we are in subdirectory test: the
### -quick option is important: it hides any local customizations
### from the testing!
HOC		= env HOCPATH=$(HOCPATH) ../$(PROGRAM) -quick

HOCPATH		= .:..:

HOCSUFFIX	= @@HOCSUFFIX@@

### Basename of temporary hoc distribution directory:
HOCVERSION	= $(PROGRAM)-$(VERSION)

### These should be two-letter ISO 3166 country codes, corresponding
### to subdirectories with language-specific help.hoc, hoc.rc, and
### translations.hoc files.
LANGUAGES	= da de en es fr hr pt tr

SUBDIRS		= test32 test64 test80 test128

SUBDIRLOOP	= for f in $(SUBDIRS); do ( cd $$f ; $(MAKE) $@@) ; done

### This needs to be one long line, to work around a bug in HP-UX make, sigh...:
SYSHOCDEFS	= -DSYSHOCDIR=\"$(SYSHOCDIR)\" -DSYSHOCHLPBASE=\"$(SYSHOCHLPBASE)\" -DSYSHOCRCBASE=\"$(SYSHOCRCBASE)\" -DSYSHOCXLTBASE=\"$(SYSHOCXLTBASE)\"

### Where the system-wide installed hoc startup files reside.  The
### filenames "help.hoc", "hoc.rc", and "translations.hoc" cannot be
### changed without further adjustments in the install-rc and
### uninstall-rc targets below.  The hoc source code itself does not
### require changes.

SYSHOCDIR	= $(shrlibdir)

SYSHOCHLP	= $(shrlibdir)/$(SYSHOCHLPBASE)

SYSHOCHLPBASE	= help.hoc

SYSHOCRC	= $(shrlibdir)/$(SYSHOCRCBASE)

SYSHOCRCBASE	= hoc.rc

SYSHOCHLPLANGALL = $(localedir)/*/$(SYSHOCHLPBASE)

SYSHOCRCLANGALL	= $(localedir)/*/$(SYSHOCRCBASE)

SYSHOCXLT	= $(shrlibdir)/$(SYSHOCXLTBASE)

SYSHOCXLTBASE	= translations.hoc

SYSHOCXLTLANGALL = $(localedir)/*/$(SYSHOCXLTBASE)

TESTFP		= @@TESTFP@@

TMPDIR		= /tmp

### Where the distribution files are built (must be temporary!)
TMPHOCDIR	= $(TMPDIR)/$(HOCVERSION)

### ====================================================================
### Distribution files for this package:

ANSI2KNRFILES	= ansi2knr.1 ansi2knr.c
AWKFILES	= ascii-to-msg.awk find-missing-help.awk
CONFIGFILES     = Makefile.in config.hin configure configure.in \
		  configure.sed
CHKFILES        = chkctype.c chkgamma.c chkieee.c chklocale.c \
		  chkscalb.c chkstore.c chkstrtod.c
CHKEXEFILES	= $(CHKFILES:.c=)
DISTFILES       = $(CONFIGFILES) $(DOCFILES) $(ANSI2KNRFILES) $(AWKFILES) \
		  $(ELFILES) $(HOCFILES) $(HTMLFILES) $(INITFILES) \
		  $(MANFILES) $(CHKFILES) $(PRSRCS) $(PDFFILES) $(PSFILES) \
		  $(SHFILES) $(SOKFILES) $(SSHFILES) $(TXTFILES) index.html
DISTDIRS	= locale save $(SUBDIRS) $(RCSDIRS)
DOCFILES        = BUG-REPORTS ChangeLog COPYRIGHT INSTALL PROBLEMS \
		  PROJECTS README README.NaN README.UTAH SYSBUGS TO-DO
ELFILES		= hoc.el
ELCFILES	= $(ELFILES:.el=.elc)
HOCFILES        = annuity.hoc crypto.hoc decrypt.hoc encrypt.hoc \
		  expm1.hoc fortune.hoc log1pa.hoc log1pb.hoc \
		  log1pc.hoc primes.hoc pushd.hoc require.hoc \
		  show-strftime.hoc sunmath.hoc
HTMLFILES               = $(MANFILES:.1=.html)
INITFILES       = $(SYSHOCHLPBASE) $(SYSHOCRCBASE) translations.hoc
MANFILES	= hoc.1
OBJS		= $(SRCS:.c=.o)
PDFFILES	= $(MANFILES:.1=.pdf)
PSFILES		= $(MANFILES:.1=.ps)
PSGZFILES	= $(MANFILES:.1=.ps.gz)

### NB: This intentionally excludes subdirectory RCS directories,
### because they will be handled by recursive copies of DISTDIRS:
RCSDIRS		= RCS

SHFILES		= check-help.sh find-missing-help.sh
SRCS            = code.c hoc.c ieee754.c init.c io.c match.c math.c random.c \
		  readline.c store.c string.c strlcat.c strlcpy.c symbol.c \
		  time.c
PRSRCS          = code.c hoc.y fp_arch.h fp_t.h hoc.h ieee754.c \
		  init.c io.c match.c math.c random.c readline.c readline.h \
		  stdc.h store.c string.c strlcat.c strlcpy.c symbol.c \
		  time.c
TAGSRCS		= $(PRSRCS)
ASMSRCS		= $(SRCS:.c=.s)
SERFILES	= $(MANFILES:.1=.ser)
SOKFILES	= $(MANFILES:.1=.sok)
SSHDIR		= $(prefix)/share/a2ps/sheets
SSHFILES	= hoc.ssh
TXTFILES	= $(MANFILES:.1=.txt)

### ====================================================================
### Command abbreviations:

MANEDIT		= $(SED) \
			-e s=\@@PACKAGE_DATE\@@=$(PACKAGE_DATE)=g \
			-e s=\@@PACKAGE_NAME\@@=$(PACKAGE_NAME)=g \
			-e s=\@@PACKAGE_VERSION\@@=$(PACKAGE_VERSION)=g \
			-e s=\@@SYSHOCDIR\@@=$(SYSHOCDIR)=g \
			-e s=\@@SYSHOCHLP\@@=$(SYSHOCHLP)=g \
			-e s=\@@SYSHOCHLPBASE\@@=$(SYSHOCHLPBASE)=g \
			-e s=\@@SYSHOCRC\@@=$(SYSHOCRC)=g \
			-e s=\@@SYSHOCRCBASE\@@=$(SYSHOCRCBASE)=g \
			-e s=\@@SYSHOCXLT\@@=$(SYSHOCXLT)=g \
			-e s=\@@SYSHOCXLTBASE\@@=$(SYSHOCXLTBASE)=g

### ====================================================================
### Additional compilation rules:

.PRECIOUS:	hoc.c

.SUFFIXES:	.ser .s .i .c .pdf .ps .html .txt .1

.c.i:
	$(CC) $(CFLAGS) -E $< > $@@

.c.s:
	$(CC) $(CFLAGS) -S $<

.1.html:
	$(MANEDIT) < $*.1 > $*.tmp
	$(MAN2HTML) $(MAN2HTMLFLAGS) $*.tmp
	-$(RM) $*.tmp

.1.pdf:
	$(MANEDIT) < $< | $(GROFF) -Tps -man > $*.ps
	$(PSTOPDF) $(PSTOPDFFLAGS) $*.ps

.1.ps:
	$(MANEDIT) < $< | $(GROFF) -Tps -man > $@@

.1.ser:
	$(DEROFF) < $< | \
		$(SPELL) +$*.sok | \
			$(SED) -e "/[0-9.,']/d" | \
				$(SORT) -u >$@@

.1.txt:
	$(MANEDIT) < $< | $(GROFF) -Tascii -man | $(COL) -b -x > $@@

.ps.pdf:
	$(PSTOPDF) $(PSTOPDFFLAGS) $<

### ====================================================================
### Makefile targets:

all:	hoc

ansi2knr:	ansi2knr.c
	$(CC) $(CFLAGS) -o $@@ $?

asm:	$(ASMSRCS)

bundle:
	@@bundle $(DISTFILES) $(DISTDIRS)

check check-a check-b check-c check-d check-e check-f check-g:	all clean-test
	(cd $(TESTFP); $(MAKE) -s HOC="$(HOC)" SHELL="$(SHELL)" $@@)

chkctype:	chkctype.o
	$(CC) $(CFLAGS) -o $@@ chkctype.o $(LDFLAGS) $(LIBS)

chkieee:	chkieee.o chkstore.o
	$(CC) $(CFLAGS) -o $@@ chkieee.o chkstore.o $(LDFLAGS) $(LIBS)

chkgamma:	chkgamma.o
	$(CC) $(CFLAGS) -o $@@ chkgamma.o $(LDFLAGS) $(LIBS)

chklocale:	chklocale.o
	$(CC) $(CFLAGS) -o $@@ chklocale.o $(LDFLAGS) $(LIBS)

chkscalb:	chkscalb.o
	$(CC) $(CFLAGS) -o $@@ chkscalb.o $(LDFLAGS) $(LIBS)

chkstrtod:	chkstrtod.o
	$(CC) $(CFLAGS) -o $@@ chkstrtod.o $(LDFLAGS) $(LIBS)

clean:
	-$(RM) $(OBJS) *.i *.ln *.o *.s *.ser *.u *~ \#* a.lst a.out core
	-$(SUBDIRLOOP)

clean-dirs:
	-$(RM) *~ ./*/*~

clean-dist:
	-$(RM) -rf $(TMPHOCDIR)
	-$(RM) $(HOCVERSION).jar $(HOCVERSION).tar.gz \
		$(HOCVERSION).zip $(HOCVERSION).zoo
	-$(RM) $(HOCVERSION).jar-lst $(HOCVERSION).tar-lst \
		$(HOCVERSION).zip-lst $(HOCVERSION).zoo-lst

clean-doc:	clean-html clean-pdf clean-ps clean-txt

clean-exe:
	-$(RM) a.out $(CHKEXEFILES) hoc

clean-html:
	-$(RM) $(HTMLFILES)

clean-pdf:
	-$(RM) $(PDFFILES)

clean-ps:
	-$(RM) $(PSFILES)

clean-s:
	-$(RM) $(ASMSRCS)

clean-test:
	-$(SUBDIRLOOP)

clean-txt:
	-$(RM) $(TXTFILES)

clobber:	distclean

convert-to-knr:	ansi2knr hoc.c
	if $(TEST) -d original ; \
	then \
		echo 'Source code has already been converted to old-style K&R C.' ; \
	else \
		$(MKDIR) original ; \
		for f in $(SRCS) ; \
		do \
			$(MV) $$f original/ ; \
			./ansi2knr < original/$$f > $$f ; \
		done ; \
	fi

### Make the archive files outside this directory, to avoid mutual
### inclusion.  zoo creates funny time stamps in the .zoo archive, so we
### touch it to make it current.
dist:	clean-dist clean-dirs clean-test update-save $(DISTFILES)
	$(MKDIR) $(TMPHOCDIR)
	$(CP) $(DISTFILES) $(TMPHOCDIR)
	$(CP) -r $(DISTDIRS) $(TMPHOCDIR)
	(hocsrcdir=$$PWD ; \
		cd $(TMPHOCDIR)/.. ; \
		$(TEST) -f "$(JAR)" && \
			$(JAR) cf $$hocsrcdir/$(HOCVERSION).jar $(HOCVERSION) ; \
		$(TEST) -f "$(TAR)" -a -f $(GZIP) && \
			$(TAR) cf - $(HOCVERSION) | \
				$(GZIP) -9 > $$hocsrcdir/$(HOCVERSION).tar.gz ; \
		$(TEST) -f "$(ZIP)" && \
			$(ZIP) $$hocsrcdir/$(HOCVERSION).zip $(FILELIST) ; \
		$(TEST) -f "$(ZOO)" && \
			$(ZOO) a $$hocsrcdir/$(HOCVERSION).zoo $(FILELIST) )
	$(TOUCH) $(HOCVERSION).zoo
	$(TEST) -f "$(JAR)" && \
		$(JAR) tvf $(HOCVERSION).jar > $(HOCVERSION).jar-lst 2>&1
	$(TEST) -f "$(TAR)" -a -f $(GZIP) && \
		$(GUNZIP) < $(HOCVERSION).tar.gz | $(TAR) tvf - > $(HOCVERSION).tar-lst
	$(TEST) -f "$(UNZIP)" && \
		$(UNZIP) -v  $(HOCVERSION).zip > $(HOCVERSION).zip-lst
	$(TEST) -f "$(ZOO)" && \
		$(ZOO) -list $(HOCVERSION).zoo > $(HOCVERSION).zoo-lst
### During development, do not delete build directory
###	-$(RM) -rf $(TMPHOCDIR)

distclean:	mostlyclean clean-dist clean-exe
	-$(SUBDIRLOOP)
	-$(RM) [xy].tab.[ch] hoc.c translations.tmp
	-$(RM) confdefs.h config.cache config.h config.log config.status
	-$(RM) Makefile

doc:	$(HTMLFILES) $(PDFFILES) $(PSFILES) $(TXTFILES)

foreign:	foreign.c ieee754.o store.o
	$(CC) $(CFLAGS) -DTEST -o $@@ foreign.c ieee754.o store.o $(LIBS)
	-$(RM) foreign.o

foreign.lst:	foreign
	./$? > $@@

hoc:	$(OBJS)
	$(CC) $(CFLAGS) $(OBJS) -o hoc $(LDFLAGS) $(LIBS)

### The UNIX yacc's output header file, y.tab.h, is not a portable
### file name, and yacc implementations on other systems may call it
### ytab.h instead, so we do too.
hoc.c:	hoc.y
	$(YACC) $(YFLAGS) hoc.y
	-$(TEST) -f ytab.c && $(MV) ytab.c $@@
	-$(TEST) -f y.tab.c && $(MV) y.tab.c $@@
	-$(TEST) -f y.tab.h && $(MV) y.tab.h ytab.h

hoc.html:	hoc.1

hoc.pdf:	hoc.1

hoc.ps:		hoc.1

hoc.ps.gz:	hoc.ps
	$(GZIP) -9 < $? > $@@

hoc.txt:	hoc.1

install:	hoc install-mkdirs install-el install-exe install-man \
		install-share install-ssh install-show

install-el:	uninstall-el
	-$(TEST) -d $(emacsdir) && $(CP) $(ELFILES) $(emacsdir)
	-$(TEST) -d $(emacsdir) && (cd $(emacsdir); $(CHMOD) 664 $(ELFILES))

install-exe:	uninstall-exe
	$(CP) hoc $(bindir)/$(PROGRAM)$(HOCSUFFIX)
	$(STRIP) $(bindir)/$(PROGRAM)$(HOCSUFFIX)
	$(CHMOD) 775 $(bindir)/$(PROGRAM)$(HOCSUFFIX)
	$(LN) $(bindir)/$(PROGRAM)$(HOCSUFFIX) $(bindir)/$(PROGRAM)$(HOCSUFFIX)-$(VERSION)
	-$(TEST) "$(HOCSUFFIX)" = "64" && $(LN) $(bindir)/$(PROGRAM)$(HOCSUFFIX) $(bindir)/$(PROGRAM)
	-$(TEST) "$(HOCSUFFIX)" = "64" && $(LN) $(bindir)/$(PROGRAM)$(HOCSUFFIX) $(bindir)/$(PROGRAM)-$(VERSION)

install-ftp:	install-ftp-precheck dist uninstall-ftp $(FTPFILES)
	for f in $(FTPFILES) ; \
	do \
		$(CP) $$f $(FTPDIR)/ ; \
		$(CHMOD) 664 $(FTPDIR)/$$f ; \
	done

install-ftp-precheck:
	@@$(TEST) `$(FGREP) -c $(PACKAGE_VERSION) index.html` = "5" || \
		(echo ERROR: You must first update the distribution table in index.html; exit 1)

install-hlp:	uninstall-hlp install-mkdirs
	$(CP) $(SYSHOCHLPBASE) $(shrlibdir)/
	$(CHMOD) 664 $(shrlibdir)/$(SYSHOCHLPBASE)
	$(TEST) -d $(localedir) || $(MKDIR) $(localedir)
	-for d in $(LANGUAGES) ; \
	do  \
		$(MKDIR) $(localedir)/$$d || $(TRUE) ; \
		$(CP) locale/$$d/$(SYSHOCHLPBASE) $(localedir)/$$d/ ; \
		$(CHMOD) 664 $(localedir)/$$d/$(SYSHOCHLPBASE) ; \
	done

install-lib:	uninstall-lib
	$(TEST) -d $(shrlibdir) || $(MKDIR) -p $(shrlibdirtop) || $(MKDIR) $(shrlibdirtop) || $(TRUE)
	$(TEST) -d $(shrlibdir) || $(MKDIR) -p $(shrlibdir) || $(MKDIR) $(shrlibdir) || $(TRUE)
	$(TEST) -d $(shrlibdir) && $(CHMOD) 775 $(shrlibdir)
	$(TEST) -d $(shrlibdir) && $(CP) $(HOCFILES) $(shrlibdir)/
	$(TEST) -d $(shrlibdir) && $(CHMOD) 664 $(shrlibdir)/*.hoc

install-man:	uninstall-man
	$(MANEDIT) < hoc.1 > $(mandir)/$(PROGRAM).$(manext)
	$(CHMOD) 664 $(mandir)/$(PROGRAM).$(manext)

install-mkdirs:
	$(TEST) -d $(shrlibdir) || \
		$(MKDIR) -p $(shrlibdirtop) || $(MKDIR) $(shrlibdirtop) || $(TRUE)
	$(CHMOD) 775 $(shrlibdirtop)
	$(TEST) -d $(shrlibdir) || $(MKDIR) -p $(shrlibdir) || $(MKDIR) $(shrlibdir) || $(TRUE)
	$(TEST) -d $(localedir) || $(MKDIR) -p $(localedir) || $(MKDIR) $(localedir) || $(TRUE)
	$(CHMOD) 775 $(shrlibdir) $(localedir)
	-for d in $(LANGUAGES) ; \
	do \
		$(MKDIR) -p $(localedir)/$$d || $(MKDIR) $(localedir)/$$d || $(TRUE) ; \
	 	$(CHMOD) 775 $(localedir)/$$d ; \
	done

install-rc:	uninstall-rc install-mkdirs
	$(CP) $(SYSHOCRCBASE) $(shrlibdir)/
	$(CHMOD) 664 $(shrlibdir)/$(SYSHOCRCBASE)
	$(TEST) -d $(localedir) || $(MKDIR) $(localedir)
	-for d in $(LANGUAGES) ; \
	do  \
		$(MKDIR) $(localedir)/$$d || $(TRUE) ; \
		$(CP) locale/$$d/$(SYSHOCRCBASE) $(localedir)/$$d/ ; \
		$(CHMOD) 664 $(localedir)/$$d/$(SYSHOCRCBASE) ; \
	done

install-share:	install-hlp install-lib install-rc install-xlt

install-show:
	@@echo
	@@echo Installed files...
	@@-$(TEST) -d $(shrlibdir) && $(LS) -l `$(FIND) $(shrlibdir) -type f | $(SORT)`
	@@-$(TEST) -d $(bindir) && $(LS) -l $(bindir)/$(PROGRAM)$(HOCSUFFIX) \
		$(bindir)/$(PROGRAM)$(HOCSUFFIX)-$(VERSION)
	@@-$(TEST) -d $(mandir) && $(LS) -l $(mandir)/$(PROGRAM).$(manext)
	@@-$(TEST) -d $(emacsdir) && (for f in $(ELFILES); do $(LS) -l $(emacsdir)/$$f ; done)
	@@-$(TEST) -f $(SSHDIR)/hoc.ssh && $(LS) -l $(SSHDIR)/hoc.ssh
	@@echo

install-ssh:
	$(TEST) -d $(SSHDIR) && $(CP) hoc.ssh $(SSHDIR)/ && $(CHMOD) 664 $(SSHDIR)/hoc.ssh
	$(TEST) -d $(SSHDIR) || \
		echo "a2ps seems not to be installed: skipping installation of hoc.ssh"
	$(TEST) -d $(SSHDIR) && \
		( $(FGREP) -s 'hoc:' $(SSHDIR)/hoc.ssh /dev/null > /dev/null || \
			echo "You may wish to add a line 'hoc: /*.hoc/' to the end of $(SSHDIR)/sheets.map" )

install-xlt:	uninstall-xlt install-mkdirs
	$(CP) $(SYSHOCXLTBASE) $(shrlibdir)/
	$(CHMOD) 664 $(shrlibdir)/$(SYSHOCXLTBASE)
	$(TEST) -d $(localedir) || $(MKDIR) $(localedir)
	-for d in $(LANGUAGES) ; \
	do  \
		$(MKDIR) $(localedir)/$$d || $(TRUE) ; \
		if $(TEST) -f locale/$$d/$(SYSHOCXLTBASE) ; \
		then \
			$(CP) locale/$$d/$(SYSHOCXLTBASE) $(localedir)/$$d/ ; \
			$(CHMOD) 664 $(localedir)/$$d/$(SYSHOCXLTBASE) ; \
		fi ; \
	done

### lclint gives lots of duplicate-definition warnings if it is given
### all of the source files in one pass, so we normally run it once per
### file.  However, to permit cross-module checking, we also provide a
### target to do it in one pass.
lclint:	$(LCLINTSRCS)
	@@-for f in $(LCLINTSRCS) ; \
	do \
		echo ==================== $$f ; \
		$(LCLINT) $(LCLINTFLAGS) $$f ; \
	done

lclint-one-pass:	$(LCLINTSRCS)
	$(LCLINT) $(LCLINTFLAGS) $(LCLINTSRCS)

### Although it usually is not necessary to run lint once per file,
### for consistency with the lclint and lclint-one-pass targets, we
### do the same for lint and lint-one-pass:

lint:	$(LINTSRCS)
	@@-for f in $(LINTSRCS) ; \
	do \
		echo ==================== $$f ; \
		$(LINT) $(LINTFLAGS) $$f ; \
	done

lint-one-pass:	$(LINTSRCS)
	$(LINT) $(LINTFLAGS) $(LINTSRCS)

maintainer-clean:
	@@echo "This command is intended for maintainers to use;"
	@@echo "it deletes files that may require special tools to rebuild."
	-$(RM) TAGS
	$(MAKE) clean-html clean-pdf clean-ps clean-txt distclean

mostlyclean: clean
	-$(SUBDIRLOOP)

pr:	$(PRSRCS)
	@@prcan $?
	@@$(TOUCH) pr

### Private target for keeping home system up-to-date; this assumes an
### identical directory path at home as at the master site!
rsync:
	$(RSYNC) $(RSYNCFLAGS) $(DISTFILES) $(REMOTEHOST):$(PWD)
	$(RSYNC) $(RSYNCFLAGS) -r $(DISTDIRS) $(REMOTEHOST):$(PWD)

spell:	$(SERFILES)

TAGS:	$(TAGSRCS)
	$(ETAGS) $(TAGSRCS)

### This temporary file contains code that can be merged into
### translations.hoc, after discarding strings that do not require
### translation, and after dealing with embedded warning messages.  On
### 20-Dec-2001, this step found 306 strings, but after culling those
### that do not require translation, only 81 remained.  This is not a
### perfect solution to the text extraction problem, because strings
### inside conditional branches that are not selected on this platform
### will be missed.  translations.hoc on that date had 105 strings, so
### up to 25 or so strings can be missed that way.  The translations
### intentionally exclude the --copyright output, because that
### contains legal text that could only be translated to another
### language with agreement from AT&T legal staff.
translations.tmp:	ascii-to-msg.awk $(ASMSRCS)
	$(AWK) -f ascii-to-msg.awk $(ASMSRCS) >$@@

uninstall:	uninstall-el uninstall-exe uninstall-man uninstall-share \
		uninstall-ssh

uninstall-el:
	$(TEST) -d $(emacsdir) && (cd $(emacsdir) ; $(RM) $(ELFILES) $(ELCFILES))

uninstall-dirs:
	-$(RMDIR) $(localedir) $(shrlibdir) 2>/dev/null || $(TRUE)
	-$(TEST) -z "`$(LS) $(shrlibdirtop)`" && $(RMDIR) $(shrlibdirtop)

uninstall-exe:
	-$(RM) $(bindir)/$(PROGRAM)$(HOCSUFFIX) $(bindir)/$(PROGRAM)$(HOCSUFFIX)-$(VERSION)
	-$(TEST) "$(HOCSUFFIX)" = "64" && $(RM) $(bindir)/$(PROGRAM) $(bindir)/$(PROGRAM)-$(VERSION)

uninstall-ftp:	$(FTPFILES)
	( cd $(FTPDIR) ; $(RM) $(FTPFILES) )

uninstall-hlp:
	-$(RM) $(SYSHOCHLP) $(SYSHOCHLPLANGALL) || $(TRUE)
	-for d in $(LANGUAGES) ; do $(RMDIR) $(localedir)/$$d/ 2>/dev/null || $(TRUE) ; done

uninstall-lib:
	-(cd $(shrlibdir); $(RM) $(HOCFILES)) || $(TRUE)

uninstall-man:
	-$(RM) $(mandir)/$(PROGRAM).$(manext) || $(TRUE)
	-$(RM) $(catdir)/$(PROGRAM).$(manext) || $(TRUE)

uninstall-rc:
	-$(RM) $(SYSHOCRC) $(SYSHOCRCLANGALL) || $(TRUE)
	-for d in $(LANGUAGES) ; do $(RMDIR) $(localedir)/$$d/ 2>/dev/null || $(TRUE) ; done

uninstall-share: uninstall-hlp uninstall-lib uninstall-rc uninstall-xlt uninstall-dirs

uninstall-ssh:
	-$(RM) $(SSHDIR)/hoc.ssh

uninstall-xlt:
	-$(RM) $(SYSHOCXLT) $(SYSHOCXLTLANGALL) || $(TRUE)
	-for d in $(LANGUAGES) ; \
	do \
		$(RMDIR) $(localedir)/$$d/ 2>/dev/null || $(TRUE) ; \
	done

update-save:	hoc.c xtab.h
	$(RM) save/*
	$(CP) Makefile config.h configure hoc.c ytab.h save/
	$(CHMOD) 444 save/*

### xtab.h is a copy of ytab.h, but with the oldest possible
### timestamp, to avoid unnecessary recompilations:
xtab.h:	ytab.h
	@@$(TEST) -f $@@ || $(TOUCH) $@@
	-$(CMP) -s $@@ ytab.h || $(CP) ytab.h $@@

ytab.h:	hoc.c

### ====================================================================
### Object file dependencies:

CONFIG_H	= config.h stdc.h

HOC_H		= $(CONFIG_H) fp_arch.h fp_t.h hoc.h

READLINE_H	= fp_t.h readline.h

XTAB_H		= xtab.h

chkieee.o:	chkieee.c stdc.h

chkstore.o:	chkstore.c stdc.h

code.o:		code.c $(HOC_H) $(READLINE_H) xtab.h

hoc.o:		hoc.c $(HOC_H) $(READLINE_H) Makefile
	$(CC) $(CFLAGS) $(SYSHOCDEFS) -c hoc.c

ieee754.o:	ieee754.c $(HOC_H)

init.o:		init.c $(HOC_H) xtab.h

io.o:		io.c $(HOC_H) $(READLINE_H) xtab.h

math.o:		math.c $(HOC_H)

random.o:	random.c $(HOC_H)

readline.o:	readline.c $(CONFIG_H) $(READLINE_H)

store.o:	store.c $(HOC_H)

string.o:	string.c $(HOC_H)

symbol.o:	symbol.c $(HOC_H) xtab.h

time.o:		time.c $(HOC_H)

### ====================================================================
### Preprocessed file dependencies:

chkctype.i:	chkctype.c

chkgamma.i:	chkgamma.c

chkieee.i:	chkieee.c stdc.h

chklocale.i:	chklocale.c

chkscalb.i:	chkscalb.c

chkstore.i:	chkstore.c stdc.h

code.i:		code.c $(HOC_H) $(READLINE_H) xtab.h

hoc.i:		hoc.c $(HOC_H) $(READLINE_H) Makefile
	$(CC) $(CFLAGS) $(SYSHOCDEFS) -E hoc.c >$@@

ieee754.i:	ieee754.c $(HOC_H)

init.i:		init.c $(HOC_H) $(READLINE_H) xtab.h

io.i:		io.c $(HOC_H) $(READLINE_H) xtab.h

math.i:		math.c $(HOC_H)

random.i:	random.c $(HOC_H)

readline.i:	readline.c $(CONFIG_H) $(READLINE_H)

store.i:	store.c $(HOC_H)

string.i: 	string.c $(HOC_H)

symbol.i:	symbol.c $(HOC_H) xtab.h

time.i:		time.c $(HOC_H)

### ====================================================================
### Assembly file dependencies:

chkctype.s:	chkctype.c

chkgamma.s:	chkgamma.c

chkieee.s:	chkieee.c stdc.h

chklocale.s:	chklocale.c

chkscalb.s:	chkscalb.c

chkstore.s:	chkstore.c stdc.h

code.s:		code.c $(HOC_H) $(READLINE_H) xtab.h

hoc.s:		hoc.c $(HOC_H) $(READLINE_H) Makefile
	$(CC) $(CFLAGS) $(SYSHOCDEFS) -S hoc.c

ieee754.s:	ieee754.c $(HOC_H)

init.s:		init.c $(HOC_H) $(READLINE_H) xtab.h

io.s:		io.c $(HOC_H) $(READLINE_H) xtab.h

math.s:		math.c $(HOC_H)

random.s:	random.c $(HOC_H)

readline.s:	readline.c $(CONFIG_H) $(READLINE_H)

store.s:	store.c $(HOC_H)

string.s: 	string.c $(HOC_H)

symbol.s:	symbol.c $(HOC_H) xtab.h

time.s:		time.c $(HOC_H)

### ====================================================================
### Additional targets required by GNU Coding standards

Makefile config.h: Makefile.in config.status
	CC="$(CC)" ./config.status

config.status: configure
	if test "$(TESTFP)" = "test128" ; \
	then \
		CC="$(CC)" $(srcdir)/configure --srcdir=$(srcdir) --no-create --config-cache --with-long-double ; \
	elif test "$(TESTFP)" = "test80" ; \
	then \
		CC="$(CC)" $(srcdir)/configure --srcdir=$(srcdir) --no-create --config-cache --with-long-double ; \
	elif test "$(TESTFP)" = "test32" ; \
	then \
		CC="$(CC)" $(srcdir)/configure --srcdir=$(srcdir) --no-create --config-cache --with-float ; \
	else \
		CC="$(CC)" $(srcdir)/configure --srcdir=$(srcdir) --no-create --config-cache ; \
	fi

configure reconfigure: configure.in configure.sed
	-$(RM) config.h
	cd $(srcdir); $(AUTOCONF) ; $(AUTOHEADER)
### Apply needed fixup for C++ and CFLAGS with configure
	$(MV) configure configure.tmp
	$(SED) -f configure.sed <configure.tmp >configure
	-$(RM) configure.tmp
	$(CHMOD) 775 configure
@


1.20
log
@Revise to install locale directories under $(shrlibdir)/locale instead
of under $(shrlibdir)/, to clean up the installation tree, and make it
conform to the structure of the hoc source tree.

Set SHELL explicitly, since recent autoconf releases override
configure.in's setting of SHELL, sigh...
@
text
@d506 2
a507 1
HOCFILES        = annuity.hoc expm1.hoc fortune.hoc log1pa.hoc log1pb.hoc \
@


1.19
log
@Add SSHDIR and SSHFILES variables, and install-ssh and uninstall-ssh
targets.
@
text
@d139 1
d264 1
a264 1
### 
d388 1
d390 1
d470 1
a470 1
SYSHOCHLPLANG	= $(shrlibdir)/*/$(SYSHOCHLPBASE)
d472 1
a472 1
SYSHOCRCLANG	= $(shrlibdir)/*/$(SYSHOCRCBASE)
d478 1
a478 1
SYSHOCXLTLANG	= $(shrlibdir)/*/$(SYSHOCXLTBASE)
d743 2
a744 3
install:	hoc install-mkdirs install-el install-exe install-lib \
		install-hlp install-man install-rc install-ssh install-xlt \
		install-show
d772 1
d775 3
a777 3
		$(MKDIR) $(shrlibdir)/$$d || $(TRUE) ; \
		$(CP) locale/$$d/$(SYSHOCHLPBASE) $(shrlibdir)/$$d/ ; \
		$(CHMOD) 664 $(shrlibdir)/$$d/$(SYSHOCHLPBASE) ; \
d796 2
a797 1
	$(CHMOD) 775 $(shrlibdir)
d800 2
a801 2
		$(MKDIR) -p $(shrlibdir)/$$d || $(MKDIR) $(shrlibdir)/$$d || $(TRUE) ; \
	 	$(CHMOD) 775 $(shrlibdir)/$$d ; \
d807 1
d810 3
a812 3
		$(MKDIR) $(shrlibdir)/$$d || $(TRUE) ; \
		$(CP) locale/$$d/$(SYSHOCRCBASE) $(shrlibdir)/$$d/ ; \
		$(CHMOD) 664 $(shrlibdir)/$$d/$(SYSHOCRCBASE) ; \
d815 1
a815 1
install-share:	install-hlp install-lib install-rc install-ssh install-xlt 
d839 1
d842 1
a842 1
		$(MKDIR) $(shrlibdir)/$$d || $(TRUE) ; \
d845 2
a846 2
			$(CP) locale/$$d/$(SYSHOCXLTBASE) $(shrlibdir)/$$d/ ; \
			$(CHMOD) 664 $(shrlibdir)/$$d/$(SYSHOCXLTBASE) ; \
d917 2
a918 2
uninstall:        uninstall-el uninstall-exe uninstall-hlp uninstall-lib \
		  uninstall-man uninstall-rc uninstall-ssh uninstall-xlt
d923 4
d935 2
a936 4
	-$(RM) $(SYSHOCHLP) $(SYSHOCHLPLANG) || $(TRUE)
	-for d in $(LANGUAGES) ; do $(RMDIR) $(shrlibdir)/$$d/ 2>/dev/null || $(TRUE) ; done
	-$(RMDIR) $(shrlibdir) 2>/dev/null || $(TRUE)
	-$(TEST) -z "`$(LS) $(shrlibdirtop)`" && $(RMDIR) $(shrlibdirtop)
a939 2
	-$(RMDIR) $(shrlibdir) 2>/dev/null || $(TRUE)
	-$(TEST) -z "`$(LS) $(shrlibdirtop)`" && $(RMDIR) $(shrlibdirtop)
d946 4
a949 4
	-$(RM) $(SYSHOCRC) $(SYSHOCRCLANG) || $(TRUE)
	-for d in $(LANGUAGES) ; do $(RMDIR) $(shrlibdir)/$$d/ 2>/dev/null || $(TRUE) ; done
	-$(RMDIR) $(shrlibdir) 2>/dev/null || $(TRUE)
	-$(TEST) -z "`$(LS) $(shrlibdirtop)`" && $(RMDIR) $(shrlibdirtop)
d955 5
a959 4
	-$(RM) $(SYSHOCXLT) $(SYSHOCXLTLANG) || $(TRUE)
	-for d in $(LANGUAGES) ; do $(RMDIR) $(shrlibdir)/$$d/ 2>/dev/null || $(TRUE) ; done
	-$(RMDIR) $(shrlibdir) 2>/dev/null || $(TRUE)
	-$(TEST) -z "`$(LS) $(shrlibdirtop)`" && $(RMDIR) $(shrlibdirtop)
@


1.18
log
@Add match.c to SRCS and PRSRCS.

Add ETAGS and TAGSRCS variables.

Fix error in directory test in the install-xlt commands that prevented
the translation files from being installed.
@
text
@d423 1
a423 1
		  $(PSFILES) $(PSGZFILES) $(TXTFILES) \
d497 1
a497 1
		  $(SHFILES) $(SOKFILES) $(TXTFILES) index.html
d530 2
d741 2
a742 1
		install-hlp install-man install-rc install-xlt install-show
d810 1
a810 1
install-share:	install-hlp install-lib install-rc install-xlt
d815 2
a816 2
	@@$(TEST) -d $(shrlibdir) && $(LS) -l `$(FIND) $(shrlibdir) -type f | $(SORT)`
	@@$(TEST) -d $(bindir) && $(LS) -l $(bindir)/$(PROGRAM)$(HOCSUFFIX) \
d818 3
a820 2
	@@$(TEST) -d $(mandir) && $(LS) -l $(mandir)/$(PROGRAM).$(manext)
	@@$(TEST) -d $(emacsdir) && (for f in $(ELFILES); do $(LS) -l $(emacsdir)/$$f ; done)
d823 8
d912 1
a912 1
		  uninstall-man uninstall-rc uninstall-xlt
d945 3
@


1.17
log
@Add -quick option to HOC definition, so that local customizations
do not affect the "make check" validation tests.

Add target for foreign and foreign.lst.
@
text
@d232 2
d519 3
a521 3
SRCS            = code.c hoc.c ieee754.c init.c io.c math.c random.c \
		  readline.c store.c string.c strlcat.c strlcpy.c \
		  symbol.c time.c
d523 1
a523 1
		  init.c io.c math.c random.c readline.c readline.h \
d526 1
d655 2
d825 1
a825 1
		if $(TEST) -f $$d/$(SYSHOCXLTBASE) ; \
d881 2
a882 2
TAGS:	$(PRSRCS)
	etags $(PRSRCS)
@


1.16
log
@Add support for splint (new generation of lclint).
Add strlcat.c and strlcpy.c to source lists.
@
text
@d425 4
a428 2
### Where hoc is found when we are in subdirectory test:
HOC		= env HOCPATH=$(HOCPATH) ../$(PROGRAM)
d703 7
@


1.15
log
@Add the new SYSBUGS and fp_arch.h files to the dependency lists.
@
text
@d192 3
a194 1
XLCLINTFLAGS	=
d247 21
a267 7
### extended lint implementation with a great many options.  The trick
### is to find a set that produce useful output, without hiding
### important complaints in a mass of less important messages.  The set
### below seems to work reasonably for the DVI driver family on Sun
### Solaris 2.7, and is probably usable on other systems as well.  Any
### of these can options be turned back on at make time by supplying
### them with a plus prefix, e.g.,
a316 1
		  -shiftsigned \
d516 2
a517 1
		  readline.c store.c string.c symbol.c time.c
d520 2
a521 1
		  stdc.h store.c string.c symbol.c time.c
@


1.14
log
@Add FGREP macro and install-ftp-precheck target to try to catch attempts
to install a new version without updating the index.html file with
links to the distribution files.
@
text
@d481 1
a481 1
		  PROJECTS README README.NaN README.UTAH TO-DO
d502 3
a504 3
PRSRCS          = code.c hoc.y fp_t.h hoc.h ieee754.c init.c io.c \
		  math.c random.c readline.c readline.h stdc.h store.c \
		  string.c symbol.c time.c
d926 1
a926 1
HOC_H		= $(CONFIG_H) fp_t.h hoc.h
@


1.13
log
@Update AWKFILES and SHFILES lists with find-missing-help.{awk,sh}.
@
text
@d232 2
d722 1
a722 1
install-ftp:	dist uninstall-ftp $(FTPFILES)
d728 4
@


1.12
log
@Change SUBDIRS from test to the list test32 test64 test80 test128, since
four different test suites are now required (though most tests are
identical in each), add HOCSUFFIX support so that installed executables
reflect their precision, and update the dependency lists for
store.[ios].
@
text
@d467 1
a467 1
AWKFILES	= ascii-to-msg.awk
d497 1
a497 1
SHFILES		= check-help.sh
@


1.11
log
@Revise HOC setting, and add HOCPATH setting: the top-level hoc.rc
file now requires a working load() function.
@
text
@d141 1
a141 1
shrlibdir	= $(shrlibdirtop)/$(PROGRAM)-$(VERSION)
d342 2
d413 2
d416 1
a416 1
HOCVERSION	= hoc-$(VERSION)
d423 1
a423 1
SUBDIRS		= test
d456 2
d477 1
a477 1
DISTDIRS	= $(LANGUAGES) save test $(RCSDIRS)
d482 4
a485 3
HOCFILES	= expm1.hoc fortune.hoc log1pa.hoc log1pb.hoc log1pc.hoc \
		  primes.hoc pushd.hoc require.hoc show-strftime.hoc
HTMLFILES	= $(MANFILES:.1=.html)
d574 1
a574 1
	(cd test; $(MAKE) -s HOC="$(HOC)" SHELL="$(SHELL)" $@@)
d709 2
a710 2
	$(TEST) -d $(emacsdir) && $(CP) $(ELFILES) $(emacsdir)
	$(TEST) -d $(emacsdir) && (cd $(emacsdir); $(CHMOD) 664 $(ELFILES))
d713 6
a718 3
	$(CP) hoc $(bindir)
	$(STRIP) $(bindir)/$(PROGRAM)
	$(CHMOD) 775 $(bindir)/$(PROGRAM)
d733 1
a733 1
		$(CP) $$d/$(SYSHOCHLPBASE) $(shrlibdir)/$$d/ ; \
d766 1
a766 1
		$(CP) $$d/$(SYSHOCRCBASE) $(shrlibdir)/$$d/ ; \
d776 2
a777 1
	@@$(TEST) -d $(bindir) && $(LS) -l $(bindir)/$(PROGRAM)
d790 1
a790 1
			$(CP) $$d/$(SYSHOCXLTBASE) $(shrlibdir)/$$d/ ; \
d869 2
a870 1
	-$(RM) $(bindir)/$(PROGRAM)
d947 2
d987 1
a987 1
store.i:	store.c
d1027 1
a1027 1
store.s:	store.c
d1042 12
a1053 1
	CC="$(CC)" $(srcdir)/configure --srcdir=$(srcdir) --no-create --config-cache
@


1.10
log
@Add clean-doc target.
@
text
@d407 3
a409 1
HOC		= ../$(PROGRAM)
@


1.9
log
@Add primes.hoc to the HOCFILES list.
@
text
@d40 1
d598 2
@


1.8
log
@Add new check targets check-f and check-g.

Add explicit dependency for hoc.c.

Add install-share target.

Add io.* to dependency lists and new targets.

Rename x.tab.h and y.tab.h to xtab.h and ytab.h for better
portability, and update dependency lists to reflect the fact
that xtab.h is now the file included from *.c files.

Remove most of the MAX_xxx descriptions, since most arrays are
now dynamically resized.

Add hr to the LANGUAGES list.

Add new elements in the HOCFILES list.
@
text
@d474 1
a474 1
		  pushd.hoc require.hoc show-strftime.hoc
@


1.7
log
@Add Croatian (hr) to LANG list.
@
text
@d16 2
d57 1
d80 1
d82 3
d121 2
a122 2
###	x.tab.h
###	y.tab.h
d124 1
a124 1
### [01-Jan-2002]
d172 1
a172 1
### options (e.g., XDEFS="-DMAX_FRAME=4096 -DMAX_STACK=8192"):
a176 2
###	code.c		MAX_FRAME	1024	function call stack depth
###	hoc.y		MAX_NAME	1024	identifier name length limit
a177 4
###	readline.c	MAX_PUSHBACK	10240	token lookahead limit
###	code.c		MAX_STACK	2560	operand stack depth
###	hoc.y		MAX_STRING	32767	quoted string length limit
###	readline.c	MAX_TOKEN	512	numeric token length limit
d414 1
a414 1
LANGUAGES	= da de en fr hr pt tr
d473 2
a474 1
HOCFILES	= expm1.hoc log1pa.hoc log1pb.hoc log1pc.hoc show-strftime.hoc
d488 1
a488 1
SRCS            = code.c hoc.c ieee754.c init.c math.c random.c \
d490 2
a491 2
PRSRCS          = code.c hoc.y fp_t.h hoc.h ieee754.c init.c math.c \
		  random.c readline.c readline.h stdc.h store.c \
d515 3
d563 1
a563 1
check check-a check-b check-c check-d check-e check-f:	all clean-test
d673 9
d755 2
d885 1
a885 1
update-save:	hoc.c $(Y_TAB_H)
d887 1
a887 1
	$(CP) Makefile config.h configure hoc.c y.tab.h save/
d890 5
a894 2
x.tab.h:	$(Y_TAB_H)
	-$(CMP) -s x.tab.h y.tab.h || $(CP) y.tab.h x.tab.h
d896 1
a896 1
y.tab.h:	hoc.c
d907 1
a907 4
### This is needed to force regeneration of the *.[ios] files that
### depend on y.tab.h, which is potentially changed when hoc.c
### changes.
Y_TAB_H		= hoc.c y.tab.h
d913 1
a913 1
code.o:		code.c $(HOC_H) $(READLINE_H) $(Y_TAB_H)
d920 3
a922 1
init.o:		init.c $(HOC_H) $(READLINE_H) $(Y_TAB_H)
d930 1
a930 1
string.o:	string.c $(HOC_H) $(READLINE_H) $(Y_TAB_H)
d932 1
a932 1
symbol.o:	symbol.c $(HOC_H) $(Y_TAB_H)
d951 1
a951 1
code.i:		code.c $(HOC_H) $(READLINE_H) $(Y_TAB_H)
d958 3
a960 1
init.i:		init.c $(HOC_H) $(READLINE_H) $(Y_TAB_H)
d970 1
a970 1
string.i: 	string.c $(HOC_H) $(READLINE_H) $(Y_TAB_H)
d972 1
a972 1
symbol.i:	symbol.c $(HOC_H) $(Y_TAB_H)
d991 1
a991 1
code.s:		code.c $(HOC_H) $(READLINE_H) $(Y_TAB_H)
d998 3
a1000 1
init.s:		init.c $(HOC_H) $(READLINE_H) $(Y_TAB_H)
d1010 1
a1010 1
string.s: 	string.c $(HOC_H) $(READLINE_H) $(Y_TAB_H)
d1012 1
a1012 1
symbol.s:	symbol.c $(HOC_H) $(Y_TAB_H)
@


1.6
log
@Add -x option to $(COL) invocation, to remove tabs from the output .txt file.

Add Y_TAB_H symbol to fix a dependency problem that sometimes resulted
into two make runs being needed to get things up-to-date.
@
text
@d413 1
a413 1
LANGUAGES	= da de en fr pt tr
@


1.5
log
@Rewrite SYSHOCDEFS to fit on one line, to work around a bug
in HP-UX make.

Correct rule for making ansi2knr to work with non-GNU make
implementations.
@
text
@d540 1
a540 1
	$(MANEDIT) < $< | $(GROFF) -Tascii -man | $(COL) -b > $@@
d869 1
a869 1
update-save:	hoc.c y.tab.h
d874 1
a874 1
x.tab.h:	y.tab.h
d888 5
d897 1
a897 1
code.o:		code.c $(HOC_H) $(READLINE_H) y.tab.h
d904 1
a904 1
init.o:		init.c $(HOC_H) $(READLINE_H) y.tab.h
d912 1
a912 1
string.o:	string.c $(HOC_H) $(READLINE_H) y.tab.h
d914 1
a914 1
symbol.o:	symbol.c $(HOC_H) y.tab.h
d933 1
a933 1
code.i:		code.c $(HOC_H) $(READLINE_H) y.tab.h
d940 1
a940 1
init.i:		init.c $(HOC_H) $(READLINE_H) y.tab.h
d950 1
a950 1
string.i: 	string.c $(HOC_H) $(READLINE_H) y.tab.h
d952 1
a952 1
symbol.i:	symbol.c $(HOC_H) y.tab.h
d971 1
a971 1
code.s:		code.c $(HOC_H) $(READLINE_H) y.tab.h
d978 1
a978 1
init.s:		init.c $(HOC_H) $(READLINE_H) y.tab.h
d988 1
a988 1
string.s: 	string.c $(HOC_H) $(READLINE_H) y.tab.h
d990 1
a990 1
symbol.s:	symbol.c $(HOC_H) y.tab.h
@


1.4
log
@Add *.s targets to list of targets in header comments.
Correct order of dependencies in install-ftp target.
@
text
@d419 2
a420 6
SYSHOCDEFS	= -DSYSHOCDIR=\"$(SYSHOCDIR)\" \
		-DSYSHOCHLPBASE=\"$(SYSHOCHLPBASE)\" \
		-DSYSHOCRCBASE=\"$(SYSHOCRCBASE)\" \
		-DSYSHOCXLTBASE=\"$(SYSHOCXLTBASE)\" \


d551 1
a551 1
	$(CC) $(CFLAGS) -o $@@ $<
@


1.3
log
@Major update with many new macros and targets.
@
text
@d18 1
d21 1
d24 1
d27 1
d30 1
d32 1
d34 1
d45 1
d57 1
d63 1
d66 1
d81 1
d89 1
d92 1
d95 1
d98 1
d102 1
d117 1
a117 1
### [29-Dec-2001]
d695 1
a695 1
install-ftp:	uninstall-ftp dist $(FTPFILES)
@


1.2
log
@Add new RCSDIRS to DISTDIRS, and support for the emacs TAGS file.
@
text
@d7 2
d11 5
d18 2
d24 2
d27 1
d29 1
d32 5
d42 1
d45 1
d47 1
d50 5
d58 1
d60 1
d73 1
d76 2
d80 2
d85 3
d89 1
d91 1
d100 1
a100 1
### [08-Dec-2001]
d103 6
a108 2
PROGRAM		= @@PACKAGE_NAME@@
VERSION		= @@PACKAGE_VERSION@@
d147 20
d171 6
d181 4
d199 2
d205 2
d209 2
d213 2
d221 102
d325 5
a329 1
MKDIR		= @@MKDIR@@
d333 4
d341 4
d351 2
d354 1
d378 9
d394 3
a396 3
### to subdirectories with language-specific help.hoc and hoc.rc
### files.
LANGUAGES	= da fr
d402 7
d410 4
a413 3
### filenames "help.hoc" and "hoc.rc" cannot be changed without further
### adjustments in the install-rc and uninstall-rc targets below.  The
### hoc source code itself does not require changes.
d425 3
a427 1
SYSHOCHLPLANG	= $(shrlibdir)/*/help.hoc
d429 5
a433 1
SYSHOCRCLANG	= $(shrlibdir)/*/hoc.rc
d443 2
d448 9
a456 6
		  chkscalb.c chkstore.c
DISTFILES	= $(CONFIGFILES) $(DOCFILES) $(ELFILES) $(HOCFILES) \
		  $(INITFILES) $(PRSRCS) $(CHKFILES) $(SHFILES) $(RCSDIRS)
DISTDIRS	= $(LANGUAGES) save test
DOCFILES	= PROBLEMS PROJECTS README README.NaN README.UTAH TO-DO \
		  hoc.1
d459 4
a462 2
HOCFILES	= expm1.hoc log1pa.hoc log1pb.hoc log1pc.hoc
INITFILES	= begin.hoc end.hoc help.hoc hoc.rc
d464 7
a470 1
RCSDIRS		= RCS ./*/RCS
d473 24
a496 2
SRCS		= code.c hoc.c init.c math.c store.c symbol.c
PRSRCS		= code.c hoc.y hoc.h init.c math.c store.c symbol.c
d500 1
a500 1
.SUFFIXES:	.i .c
d505 27
d537 5
d545 2
a546 2
check check-a check-b check-c:	all
	(cd test; $(MAKE) HOC="$(HOC)" SHELL="$(SHELL)" $@@)
d563 3
d567 1
a567 1
	-$(RM) $(OBJS) *.i *.ln *.o *.u *~ \#* a.lst a.out core
d570 3
d581 13
a593 1
	-$(RM) a.out chkctype chkieee chklocale hoc
d598 16
d617 1
a617 1
dist:	clean-dist clean-test update-save
d646 1
a646 1
	-$(RM) [xy].tab.[ch] hoc.c
d650 2
d655 13
a667 3
install:          hoc install-mkdirs install-el install-exe \
		  install-lib install-hlp install-man install-rc \
		  install-show
d678 7
d686 2
a687 2
	$(CP) help.hoc $(shrlibdir)/
	$(CHMOD) 664 $(shrlibdir)/help.hoc
d690 3
a692 2
		$(CP) $$d/help.hoc $(shrlibdir)/$$d/ ; \
		$(CHMOD) 664 $(shrlibdir)/$$d/help.hoc ; \
d703 1
a703 2
	$(SED) -e s=@@SYSHOCHLP@@=$(SYSHOCHLP)=g -e s=@@SYSHOCRC@@=$(SYSHOCRC)=g \
		< hoc.1 > $(mandir)/$(PROGRAM).$(manext)
d708 1
a708 3
		$(MKDIR) -p $(shrlibdirtop) || \
			$(MKDIR) $(shrlibdirtop) || \
				$(TRUE)
d710 1
a710 4
	$(TEST) -d $(shrlibdir) || \
		$(MKDIR) -p $(shrlibdir) || \
			$(MKDIR) $(shrlibdir) || \
				$(TRUE)
d714 1
a714 3
		$(MKDIR) -p $(shrlibdir)/$$d || \
			$(MKDIR) $(shrlibdir)/$$d || \
				$(TRUE) ; \
d719 2
a720 2
	$(CP) hoc.rc $(shrlibdir)/
	$(CHMOD) 664 $(shrlibdir)/hoc.rc
d723 3
a725 2
		$(CP) $$d/hoc.rc $(shrlibdir)/$$d/ ; \
		$(CHMOD) 664 $(shrlibdir)/$$d/hoc.rc ; \
d731 1
a731 1
	@@$(TEST) -d $(shrlibdir) && $(LS) -l $(shrlibdir)/* $(shrlibdir)/*/*
d737 42
a778 1
maintainer-clean: distclean
d782 1
d794 2
a795 2
	rsync $(DISTFILES) $(REMOTEHOST):$(PWD)
	rsync -r $(DISTDIRS) $(REMOTEHOST):$(PWD)
d797 3
a799 1
TAGS:
d802 17
a818 1
uninstall: uninstall-exe uninstall-hlp uninstall-man uninstall-rc
d826 3
d850 7
a856 1
update-save:
d869 18
a886 1
code.o init.o math.o symbol.o:	config.h hoc.h y.tab.h
d888 11
a898 6
hoc.o:	hoc.c config.h hoc.h Makefile
	$(CC) $(CFLAGS) \
		-DSYSHOCDIR=\"$(SYSHOCDIR)\" \
		-DSYSHOCHLPBASE=\"$(SYSHOCHLPBASE)\" \
		-DSYSHOCRCBASE=\"$(SYSHOCRCBASE)\" \
		-c hoc.c
d907 1
a907 1
chkieee.i:	chkieee.c
d913 3
a915 1
chkstore.i:	chkstore.c
d917 2
a918 1
code.i:		code.c config.h hoc.h y.tab.h
d920 1
a920 1
hoc.i:		hoc.c hoc.h
d922 1
a922 1
init.i:		init.c config.h hoc.h y.tab.h
d924 5
a928 1
math.i:		math.c hoc.h
d932 43
a974 1
symbol.i:	symbol.c config.h hoc.h y.tab.h
d980 1
a980 1
	./config.status
d983 1
a983 1
	$(srcdir)/configure --srcdir=$(srcdir) --no-create --config-cache
d986 1
@


1.1
log
@Initial revision
@
text
@d46 1
d48 1
d51 1
d228 1
a228 1
		  $(INITFILES) $(PRSRCS) $(CHKFILES) $(SHFILES)
d237 2
d406 1
d420 3
@
